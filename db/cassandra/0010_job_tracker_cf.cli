set job_tracker ['prod-resource-sync-job'] ['column_list'] = utf8('gooruOId,indexType,version,title,description,url,contentId,distinguish,resourceSourceId,thumbnail,folder,resourceType,typeEscaped,category,mediaType,recordSource,sharing,lastModified,createdOn,grade,frameBreaker,statistics.statusIsBroken,assetURI,batchId,lastUpdatedUserUid,isOer,versionUid,clusterUid,isCanonical,resourceTypeN,depthOfknowledge,momentsofLearning,educationalUse,licenseString,resourceFormat,instructional,ownerString,creatorString,resourceSourceString,organization.partyUid');
set job_tracker ['prod-resource-sync-job'] ['end_time'] = utf8('2015-08-06 13:31:25');
set job_tracker ['prod-resource-sync-job'] ['job_interval'] = long(300000);
set job_tracker ['prod-resource-sync-job'] ['job_name'] = utf8('sync-prod-resource');
set job_tracker ['prod-resource-sync-job'] ['key_column'] = long(7453298445706545508);
set job_tracker ['prod-resource-sync-job'] ['modified_on'] = utf8('2015-08-06 13:31:25');
set job_tracker ['prod-resource-sync-job'] ['monitor_job'] = int(0);
set job_tracker ['prod-resource-sync-job'] ['owner'] = int(1919250037);
set job_tracker ['prod-resource-sync-job'] ['query'] = utf8('select c.gooru_oid, "resource" as index_type, c.version, r.title as title, r.description, r.url as url, c.content_id, r.distinguish, r.resource_source_id, r.thumbnail, r.folder, r.type_name, (replace(replace(r.type_name, "-",""),"/","")) as typeEscaped, r.category as category, r.media_type, r.record_source, c.sharing, c.last_modified, c.created_on, r.grade as grade, CASE WHEN r.has_frame_breaker = 1 THEN 1 else 0 END AS has_frame_breaker, CASE WHEN r.broken_status = 1 THEN 1 else 0 END AS broken_status, "http://repopath/" as assetURI,r.batch_id, c.last_updated_user_uid, CASE WHEN r.is_oer = 1 THEN 1 ELSE 0 END as is_oer, UUID() as versionUid,r.cluster_uid,  CASE WHEN is_representative = 0 THEN 0 ELSE 1 END as is_representative, 1 as resourceTypeN, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type =  ctv.custom_table_value_id where content_id = r.content_id and association_type in (201,202,203,204)) as depthOfknowledge, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type =  ctv.custom_table_value_id where content_id = r.content_id and association_type in (235,211,234)) as momentsofLearning,  (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type =  ctv.custom_table_value_id where content_id = r.content_id and association_type in (217,229,231,223,225,219,222,230,227,218,226,224,228,216,221)) as educationalUse,(select CONCAT(IFNULL(name,"null"),"~~", IFNULL(url,"null"),"~~", IFNULL(code,"null"),"~~", IFNULL(tag,"null"),"~~", IFNULL(icon,"null"),"~~", IFNULL(definition,"null")) from license where name = r.license_name) as licenseString, (select value from custom_table_value where custom_table_value_id = r.resource_format_id) as resourceFormat, (select value from custom_table_value where custom_table_value_id = r.instructional_id) as instructional, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.user_uid and optional_key = "show_profile_page") as ownerString, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.creator_uid and optional_key = "show_profile_page") as creatorString, (select CONCAT(IFNULL(attribution,"null"),"~~",IFNULL(domain_name,"null"),"~~",IFNULL(active_status,"null"),"~~",IFNULL(type,"null")) from resource_source where resource_source_id = r.resource_source_id) as resourceSourceString, c.organization_uid  from resource r inner join content c on c.content_id = r.content_id where  r.type_name in ("animation/kmz", "animation/swf","exam/pdf","handouts","image/png","ppt/pptx","resource/url","textbook/scribd","video/youtube","gooru/notebook") and  c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 5 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['prod-resource-sync-job'] ['running_status'] = int(0);
set job_tracker ['prod-resource-sync-job'] ['start_time'] = utf8('2014-11-27 14:40:35');
set job_tracker ['prod-resource-sync-job'] ['status'] = int(0);
set job_tracker ['sync_collection_item_assoc_delete'] ['column_list'] = utf8('gooruOId,endTime');
set job_tracker ['sync_collection_item_assoc_delete'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['sync_collection_item_assoc_delete'] ['job_interval'] = long(50000);
set job_tracker ['sync_collection_item_assoc_delete'] ['job_name'] = utf8('Sync Collection Item Delete Data');
set job_tracker ['sync_collection_item_assoc_delete'] ['key_column'] = long(7453298445706545508);
set job_tracker ['sync_collection_item_assoc_delete'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_collection_item_assoc_delete'] ['monitor_job'] = int(1);
set job_tracker ['sync_collection_item_assoc_delete'] ['owner'] = utf8('user');
set job_tracker ['sync_collection_item_assoc_delete'] ['process_type'] = utf8('delete-assoc');
set job_tracker ['sync_collection_item_assoc_delete'] ['query'] = utf8('SELECT CAST(c.gooru_oid AS CHAR) AS gooru_oid,CAST(c.last_modified AS CHAR) AS endTime FROM collection col inner join content c ON(c.content_id=col.content_id) WHERE c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 5 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['sync_collection_item_assoc_delete'] ['running_status'] = int(1);
set job_tracker ['sync_collection_item_assoc_delete'] ['status'] = int(0);
set job_tracker ['sync_collection_item_assoc_delete'] ['target_columnfamily'] = utf8('collection_item_assoc');
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['column_list'] = utf8('rowkey,collection_item_id,user_uid,collection_status,last_modified_on,minimum_score,assignment_completed,time_studying,pathway_content_id,classpage_content_id,pathway_gooru_oid,classpage_gooru_oid');
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['job_interval'] = long(300000);
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['job_name'] = utf8('User-Collection-Item-Assoc-Pathway');
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['key_column'] = utf8('rowkey');
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['modified_on'] = utf8('2015-08-06 13:41:25');
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['monitor_job'] = int(0);
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['owner'] = utf8('user');
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['query'] = utf8('select CAST(concat(cc.gooru_oid,"~",c.gooru_oid,"~",uc.user_uid) AS CHAR(255)) as rowkey,CAST(uc.collection_item_uid as CHAR(60)) as pathwayItemId,CAST(uc.user_uid AS CHAR(60)) as userId,uc.status as status,CAST(uc.last_modified_on AS CHAR(60)) as lastModified,CAST(uc.minimum_score AS CHAR(100)) as minimumScore,CAST(uc.assignment_completed AS CHAR(100)) as assignmentCompleted,CAST(uc.time_studying AS CHAR(100)) as timeSpent,CAST(ci.collection_content_id AS UNSIGNED) as pathwayContentId,CAST(cip.collection_content_id AS UNSIGNED) as classpageContentId,CAST(c.gooru_oid AS CHAR(60)) as pathwayGooruId,CAST(cc.gooru_oid AS CHAR(60)) as classpageGooruId from user_collection_item_assoc uc INNER JOIN collection_item ci on (uc.collection_item_uid=ci.collection_item_id) INNER JOIN content c on (ci.collection_content_id=c.content_id) INNER JOIN collection_item cip on(ci.collection_content_id=cip.resource_content_id) INNER JOIN content cc on (cip.collection_content_id=cc.content_id) INNER JOIN collection col on(ci.collection_content_id=col.content_id) where col.collection_type="pathway" and uc.last_modified_on BETWEEN DATE_SUB(:startTime, INTERVAL 20 SECOND) AND NOW()  ORDER BY uc.last_modified_on ASC');
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['running_status'] = int(0);
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['start_time'] = utf8('2014-11-12 06:32:09');
set job_tracker ['migrate_user_collection_item_assoc_pathway'] ['status'] = int(0);
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['column_list'] = utf8('rkey,count~resourceUsedUser,endTime');
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['end_time'] = utf8('2015-08-06 13:32:57');
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['job_interval'] = long(300000);
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['job_name'] = utf8('Sync-User-Count-Of-Resource-Inside-Collection-Resource-CF');
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['key_column'] = int(1919640953);
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['modified_on'] = utf8('2015-08-06 13:41:30');
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['monitor_job'] = int(0);
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['query'] = utf8('select CAST(concat("all~",c.gooru_oid) AS CHAR(40)) as rkey, count(distinct cc.user_uid) as user_count, CAST(ci1.last_modified AS CHAR(55)) as endTime from content c inner join collection_item ci on (ci.resource_content_id = c.content_id) inner join (select distinct cr.content_id, max(c.last_modified) as last_modified from content c inner join resource r on (c.content_id = r.content_id) inner join collection_item ci on (r.content_id = ci.collection_content_id) inner join content cr on (ci.resource_content_id = cr.content_id)  where r.type_name = "scollection" and c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND DATE_ADD(:startTime, INTERVAL 2 DAY) group by cr.content_id) AS ci1 on (ci.resource_content_id = ci1.content_id) inner join content cc on (cc.content_id = ci.collection_content_id) group by c.gooru_oid order by ci1.last_modified ASC');
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['running_status'] = int(0);
set job_tracker ['sync_resource_used_user_count_resource_cf'] ['status'] = int(0);
set job_tracker ['sync_user'] ['column_list'] = utf8('gooruUid,firstname,lastname,username,roleId,accountUid,securityGroupUid,registerToken,confirmStatus,licenseVersion,mailStatus,addedBySystem,importCode,parentId,parentUid,accountTypeId,organizationUid,organization.partyUid,userGroupUid,primaryOrganizationUid,viewFlag,isDeleted,referenceUid,identityId,idpId,active,createdOn,deactivatedOn,emailId,lastLogin,accountRegisterType,loginType,emailSso,roleSet,profileVisibility,parentAccountUserName,profileImage,lastModified,endTime');
set job_tracker ['sync_user'] ['end_time'] = utf8('2015-08-10 13:14:10.0');
set job_tracker ['sync_user'] ['job_interval'] = long(50000);
set job_tracker ['sync_user'] ['job_name'] = utf8('sync-user');
set job_tracker ['sync_user'] ['key_column'] = long(7453298445706946916);
set job_tracker ['sync_user'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['sync_user'] ['monitor_job'] = int(1);
set job_tracker ['sync_user'] ['owner'] = utf8('user');
set job_tracker ['sync_user'] ['process_type'] = utf8('content');
set job_tracker ['sync_user'] ['query'] = utf8('SELECT u.gooru_uid, u.firstname, u.lastname, u.username, CAST(u.role_id AS UNSIGNED) AS role_id, u.account_uid, u.security_group_uid, u.register_token, CAST(u.confirm_status AS UNSIGNED) AS confirm_status, u.license_version, u.mail_status, CAST(u.added_by_system AS UNSIGNED) AS added_by_system, u.import_code, u.parent_id, u.parent_uid, CAST(u.account_type_id AS UNSIGNED) AS account_type_id, u.organization_uid, u.organization_uid, u.user_group_uid, u.primary_organization_uid, CAST(u.view_flag AS UNSIGNED) AS view_flag, CAST(u.is_deleted AS UNSIGNED) AS is_deleted, u.reference_uid, i.identity_id, i.idp_id, CAST(i.active AS UNSIGNED) AS active, i.registered_on, i.deactivated_on, i.external_id, i.last_login, i.account_created_type, i.login_type, i.email_sso, (select group_concat(ur.name) from user_role ur inner join user_role_assoc ura on ura.role_id = ur.role_id where ura.user_uid = u.gooru_uid) as role_set, (select optional_value from party_custom_field where optional_key = "show_profile_page" and party_uid = u.gooru_uid) as show_profile_page, (select username from user where gooru_uid = u.parent_uid) as parentAccountUserName, CONCAT("http://profile-demo.s3.amazonaws.com/profile-prod/", u.gooru_uid, ".png") as profile_image, CAST(p.last_modified_on AS CHAR(50)) as lastModified,i.last_login AS endTime FROM party AS p inner join user AS u ON p.party_uid = u.gooru_uid INNER JOIN identity AS i ON (u.gooru_uid = i.user_uid) WHERE i.last_login BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY i.last_login ASC');
set job_tracker ['sync_user'] ['running_status'] = int(1);
set job_tracker ['sync_user'] ['status'] = int(0);
set job_tracker ['sync_user'] ['target_columnfamily'] = int(1970496882);
set job_tracker ['sync_collection_data_resource_cf'] ['column_list'] = utf8('gooruOId,indexType,version,title,description,url,contentId,imagePath,resourceType,typeEscaped,sharing,lastModified,createdOn,grade,assetURI,lastUpdatedUserUid,versionUid,clusterUid,isCanonical,depthOfknowledge,momentsofLearning,educationalUse,resourceFormat,resourceFormatId,ownerString,creatorString,sCollectionCo.collectionType,sCollectionCo.narrationLink,sCollectionCo.notes,sCollectionCo.keyPoints,sCollectionCo.language,sCollectionCo.goals,sCollectionCo.estimatedTime,sCollectionCo.network,sCollectionCo.languageObjective,sCollectionCo.clusterUid,sCollectionCo.isCanonical,sCollectionCo.audience,sCollectionCo.instructionMethod,sCollectionCo.learningAndInovation,organization.partyUid,folder,thumbnail,endTime');
set job_tracker ['sync_collection_data_resource_cf'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['sync_collection_data_resource_cf'] ['index_datasource'] = utf8('content_index');
set job_tracker ['sync_collection_data_resource_cf'] ['index_flag'] = int(1);
set job_tracker ['sync_collection_data_resource_cf'] ['job_interval'] = long(50000);
set job_tracker ['sync_collection_data_resource_cf'] ['job_name'] = utf8('Sync Collection Data Resource CF');
set job_tracker ['sync_collection_data_resource_cf'] ['key_column'] = long(7453298445706545508);
set job_tracker ['sync_collection_data_resource_cf'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_collection_data_resource_cf'] ['monitor_job'] = int(1);
set job_tracker ['sync_collection_data_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_collection_data_resource_cf'] ['process_type'] = utf8('content');
set job_tracker ['sync_collection_data_resource_cf'] ['query'] = utf8('SELECT c.gooru_oid, col.collection_type AS index_type, c.version, col.title AS title, col.description, col.url AS url, c.content_id, col.image_path, col.collection_type AS type_name, (replace(col.collection_type, "/","")) AS typeEscaped, c.sharing, CAST(c.last_modified AS CHAR(30)) AS last_modified, CAST(c.created_on AS CHAR(30)) AS created_on, col.grade AS grade, "http://repopath/" AS assetURI, c.last_updated_user_uid, UUID() AS versionUid, col.cluster_uid, CASE WHEN col.is_representative = 0 THEN 0 ELSE 1 END AS is_representative, (SELECT GROUP_CONCAT(ctv.value SEPARATOR "~~") FROM content_meta_association cma INNER JOIN custom_table_value ctv ON cma.association_type = ctv.custom_table_value_id WHERE content_id = c.content_id AND association_type IN (201,202,203,204)) AS depthOfknowledge, (SELECT GROUP_CONCAT(ctv.value SEPARATOR "~~") FROM content_meta_association cma INNER JOIN custom_table_value ctv ON cma.association_type = ctv.custom_table_value_id WHERE content_id = c.content_id AND association_type IN (235,211,234)) AS momentsofLearning, (SELECT GROUP_CONCAT(ctv.value SEPARATOR "~~") FROM content_meta_association cma INNER JOIN custom_table_value ctv ON cma.association_type = ctv.custom_table_value_id WHERE content_id = c.content_id AND association_type IN (217,229,231,223,225,219,222,230,227,218,226,224,228,216,221)) AS educationalUse, col.collection_type AS resourceFormat,CASE WHEN col.collection_type = "collection" THEN 122 ELSE CASE WHEN col.collection_type = "shelf" THEN 125 ELSE CASE WHEN col.collection_type = "assessment" THEN 134 ELSE CASE WHEN col.collection_type = "folder" THEN 133 ELSE CASE WHEN col.collection_type = "quiz" THEN 135 ELSE CASE WHEN col.collection_type = "assessment/url" THEN 136 ELSE CASE WHEN col.collection_type = "course" THEN 137 ELSE CASE WHEN col.collection_type = "unit" THEN 138 ELSE CASE WHEN col.collection_type = "lesson" THEN 139 END END END END END END END END END AS resourceFormatId , (SELECT concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) FROM user u INNER JOIN party_custom_field p ON p.party_uid = u.gooru_uid WHERE u.gooru_uid = c.user_uid AND optional_key = "show_profile_page") AS ownerString, (SELECT concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) FROM user u INNER JOIN party_custom_field p ON p.party_uid = u.gooru_uid WHERE u.gooru_uid = c.creator_uid AND optional_key = "show_profile_page") AS creatorString, col.collection_type, col.narration_link, col.notes, col.key_points, col.language, col.goals, col.estimated_time, col.network, col.language_objective, col.cluster_uid AS collectionClusterUid, CASE WHEN col.is_representative = 0 THEN 0 ELSE 1 END AS collectionRepresentative, (SELECT GROUP_CONCAT(ctv.value SEPARATOR "~~") FROM content_meta_association cma INNER JOIN custom_table_value ctv ON cma.association_type = ctv.custom_table_value_id WHERE content_id = c.content_id AND association_type IN (195,198,197,196,199,200)) AS audience, (SELECT GROUP_CONCAT(ctv.value SEPARATOR "~~") FROM content_meta_association cma INNER JOIN custom_table_value ctv ON cma.association_type = ctv.custom_table_value_id WHERE content_id = c.content_id AND association_type IN (208,210,209)) AS instructionMethod, (SELECT GROUP_CONCAT(ctv.value SEPARATOR "~~") FROM content_meta_association cma INNER JOIN custom_table_value ctv ON cma.association_type = ctv.custom_table_value_id WHERE content_id = c.content_id AND association_type IN (207,206,205)) AS learningAndInovation, c.organization_uid,CONCAT(SUBSTRING_INDEX(image_path, "/", 3),"/") as folder, SUBSTRING_INDEX(image_path, "/", -1) as thumbnail, CAST(c.last_modified AS CHAR) AS endTime FROM content c INNER JOIN collection col ON col.content_id = c.content_id WHERE col.collection_type IN ("collection", "shelf", "assessment", "
folder", "quiz", "assessment/url", "course", "unit", "lesson") AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['sync_collection_data_resource_cf'] ['running_status'] = int(1);
set job_tracker ['sync_collection_data_resource_cf'] ['status'] = int(0);
set job_tracker ['sync_collection_data_resource_cf'] ['target_columnfamily'] = long(8243121615520555877);
set job_tracker ['user_index'] ['index_api'] = utf8('http://user_index_api_ip');
set job_tracker ['user_index'] ['index_limit'] = long(1);
set job_tracker ['user_index'] ['request_method'] = utf8('GET');
set job_tracker ['user_index'] ['status'] = int(1);
set job_tracker ['sync_class_data_dim_resource_cf'] ['column_list'] = utf8('app_key,app_id,gooru_oid,title,description,creator_uid,thumbnail,type_name,last_modified,created_on,grade,last_modified_by_uid,resource_format,resource_format_id,organization_uid,course_content_id,minimum_score,visibility,endTime');
set job_tracker ['sync_class_data_dim_resource_cf'] ['end_time'] = utf8('2015-08-10 12:53:39');
set job_tracker ['sync_class_data_dim_resource_cf'] ['job_interval'] = long(50000);
set job_tracker ['sync_class_data_dim_resource_cf'] ['job_name'] = utf8('Sync Class Data - Dim Resource CF');
set job_tracker ['sync_class_data_dim_resource_cf'] ['key_column'] = utf8('app_id');
set job_tracker ['sync_class_data_dim_resource_cf'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_class_data_dim_resource_cf'] ['monitor_job'] = int(1);
set job_tracker ['sync_class_data_dim_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_class_data_dim_resource_cf'] ['process_type'] = utf8('content');
set job_tracker ['sync_class_data_dim_resource_cf'] ['query'] = utf8('select CONCAT("GLP") as app_key, CONCAT("GLP~", c.class_uid) as app_id,c.class_uid, ug.name, c.description, p.created_by_uid, c.image_path, "class" as type_name, CAST(p.last_modified_on AS CHAR(30)) as last_modified_on, p.created_on, grades, p.last_modified_by_uid, "class" AS resourceFormat, 131 AS resource_format_id, ug.organization_uid, c.course_content_id, c.minimum_score, CAST(visibility AS UNSIGNED) AS visibility, CAST(p.last_modified_on AS CHAR(30)) AS endTime from class c inner join party p on (p.party_uid = c.class_uid) inner join user_group ug on (ug.user_group_uid = p.party_uid) where p.last_modified_on BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY p.last_modified_on ASC');
set job_tracker ['sync_class_data_dim_resource_cf'] ['running_status'] = int(1);
set job_tracker ['sync_class_data_dim_resource_cf'] ['status'] = int(0);
set job_tracker ['sync_class_data_dim_resource_cf'] ['target_columnfamily'] = utf8('dim_resource');
set job_tracker ['user-sync-job'] ['column_list'] = utf8('gooruUid,firstname,lastname,username,roleId,accountUid,securityGroupUid,registerToken,confirmStatus,licenseVersion,mailStatus,addedBySystem,importCode,parentId,parentUid,accountTypeId,organizationUid,organization.partyUid,userGroupUid,primaryOrganizationUid,viewFlag,isDeleted,referenceUid,identityId,idpId,active,createdOn,deactivatedOn,emailId,lastLogin,accountRegisterType,loginType,emailSso,roleSet,profileVisibility,parentAccountUserName,lastModified');
set job_tracker ['user-sync-job'] ['end_time'] = utf8('2015-08-06 13:16:22');
set job_tracker ['user-sync-job'] ['index_datasource'] = utf8('user_index');
set job_tracker ['user-sync-job'] ['index_flag'] = int(1);
set job_tracker ['user-sync-job'] ['job_interval'] = long(300000);
set job_tracker ['user-sync-job'] ['job_name'] = utf8('sync-user');
set job_tracker ['user-sync-job'] ['key_column'] = long(7453298445706946916);
set job_tracker ['user-sync-job'] ['modified_on'] = utf8('2015-08-06 13:16:22');
set job_tracker ['user-sync-job'] ['monitor_job'] = int(0);
set job_tracker ['user-sync-job'] ['owner'] = utf8('user');
set job_tracker ['user-sync-job'] ['query'] = utf8('SELECT u.gooru_uid, u.firstname, u.lastname, u.username, CAST(u.role_id AS UNSIGNED) AS role_id, u.account_uid, u.security_group_uid, u.register_token, CAST(u.confirm_status AS UNSIGNED) AS confirm_status, u.license_version, u.mail_status, CAST(u.added_by_system AS UNSIGNED) AS added_by_system, u.import_code, u.parent_id, u.parent_uid, CAST(u.account_type_id AS UNSIGNED) AS account_type_id, u.organization_uid, u.organization_uid, u.user_group_uid, u.primary_organization_uid, CAST(u.view_flag AS UNSIGNED) AS view_flag, CAST(u.is_deleted AS UNSIGNED) AS is_deleted, u.reference_uid, i.identity_id, i.idp_id, CAST(i.active AS UNSIGNED) AS active, i.registered_on, i.deactivated_on, i.external_id, i.last_login, i.account_created_type, i.login_type, i.email_sso, (select group_concat(ur.name) from user_role ur inner join user_role_assoc ura on ura.role_id = ur.role_id where ura.user_uid = u.gooru_uid) as role_set, (select optional_value from party_custom_field where optional_key = "show_profile_page" and party_uid = u.gooru_uid) as show_profile_page, (select username from user where gooru_uid = u.parent_uid) as parentAccountUserName, CAST(p.last_modified_on AS CHAR(50)) as lastModified FROM party AS p inner join user AS u ON p.party_uid = u.gooru_uid INNER JOIN identity AS i ON (u.gooru_uid = i.user_uid) WHERE  i.registered_on BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND  NOW()  ORDER BY i.registered_on ASC');
set job_tracker ['user-sync-job'] ['running_status'] = int(0);
set job_tracker ['user-sync-job'] ['status'] = int(0);
set job_tracker ['sync_resource_copied_count_resource_cf'] ['column_list'] = utf8('rkey,count~resourceAddedPublic,count~resourceAddedPrivate,count~resourceAddedSharable,count~resourceAdded,endTime');
set job_tracker ['sync_resource_copied_count_resource_cf'] ['end_time'] = utf8('2015-08-06 13:32:57');
set job_tracker ['sync_resource_copied_count_resource_cf'] ['job_interval'] = long(300000);
set job_tracker ['sync_resource_copied_count_resource_cf'] ['job_name'] = utf8('Resource-Copied-Count-Sync-ResourceCF');
set job_tracker ['sync_resource_copied_count_resource_cf'] ['key_column'] = int(1919640953);
set job_tracker ['sync_resource_copied_count_resource_cf'] ['modified_on'] = utf8('2015-08-06 13:41:30');
set job_tracker ['sync_resource_copied_count_resource_cf'] ['monitor_job'] = int(0);
set job_tracker ['sync_resource_copied_count_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_resource_copied_count_resource_cf'] ['query'] = utf8('select CAST(concat("all~",c.gooru_oid) AS CHAR(40)) as rkey, SUM(CASE cc.sharing WHEN "public" THEN 1 END) as public_count, SUM(CASE cc.sharing WHEN "private" THEN 1 END) as private_count,SUM(CASE cc.sharing WHEN "anyonewithlink" THEN 1 END) as anyonewithlink_count , count(c.gooru_oid) as added_count, CAST(ci1.last_modified AS CHAR(55)) as endTime from content c inner join collection_item ci on (ci.resource_content_id = c.content_id) inner join (select distinct cr.content_id, max(c.last_modified) as last_modified from content c inner join resource r on (c.content_id = r.content_id) inner join collection_item ci on (r.content_id = ci.collection_content_id) inner join content cr on (ci.resource_content_id = cr.content_id)  where r.type_name = "scollection" and c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() group by cr.content_id) AS ci1 on (ci.resource_content_id = ci1.content_id) inner join content cc on (cc.content_id = ci.collection_content_id) group by c.gooru_oid order by ci1.last_modified ASC');
set job_tracker ['sync_resource_copied_count_resource_cf'] ['running_status'] = int(0);
set job_tracker ['sync_resource_copied_count_resource_cf'] ['status'] = int(0);
set job_tracker ['sync_content_reaction_count'] ['column_list'] = utf8('rkey,count~reactions,count~i-can-explain,count~i-can-understand,count~i-donot-understand,count~i-need-help,count~meh,sum~reactionType,endTime');
set job_tracker ['sync_content_reaction_count'] ['end_time'] = utf8('2015-01-01 04:29:10');
set job_tracker ['sync_content_reaction_count'] ['job_name'] = utf8('Content-Reactions-Count');
set job_tracker ['sync_content_reaction_count'] ['key_column'] = int(1919640953);
set job_tracker ['sync_content_reaction_count'] ['modified_on'] = utf8('2015-01-02 11:50:05');
set job_tracker ['sync_content_reaction_count'] ['owner'] = utf8('user');
set job_tracker ['sync_content_reaction_count'] ['query'] = utf8('select CONCAT("all~",f.assoc_gooru_oid) AS assoc_gooru_oid,count(1) as "count~reactions", COUNT(CASE WHEN c.value = "i-can-explain" THEN f.creator_uid END) AS "count~i-can-explain", COUNT(CASE WHEN c.value = "i-can-understand" THEN f.creator_uid END) AS "count~i-can-understand", COUNT(CASE WHEN c.value = "i-donot-understand" THEN f.creator_uid END) AS "count~i-donot-understand", COUNT(CASE WHEN c.value = "i-need-help" THEN f.creator_uid END) AS "count~i-need-help", COUNT(CASE WHEN c.value = "meh" THEN f.creator_uid END) AS "count~meh",sum(IF (c.value = "i-need-help",1,IF(c.value = "meh",3,IF(c.value = "i-donot-understand",2,IF(c.value = "i-can-understand",4,IF(c.value = "i-can-explain",5,0)))))) as "sum~reactionType", CAST(last_modified_on AS CHAR(60)) as endTime  from feedback f inner join custom_table_value c on (f.feedback_type_id = c.custom_table_value_id) inner join custom_table ct on (c.custom_table_id = ct.custom_table_id) where ct.name = "feedback_reaction" and created_date between :startTime and  now() or last_modified_on between :startTime and now() group by assoc_gooru_oid order by last_modified_on');
set job_tracker ['job_2'] ['column_list'] = utf8('gooru_oid,content_id,user_uid,creator_uid,sharing,last_modified,created_on,title,thumbnail,grade,category,views_count,organization_uid,type_name,last_updated_user_uid,url,copied_resource_id,is_oer,record_source,license_name,resource_type,endTime,app_key,app_id,resource_format_id,instructional_id');
set job_tracker ['job_2'] ['end_time'] = utf8('2014-09-05 07:32:37.0');
set job_tracker ['job_2'] ['job_name'] = utf8('dim_resource');
set job_tracker ['job_2'] ['job_path'] = utf8('dim_resource');
set job_tracker ['job_2'] ['key_column'] = utf8('app_id');
set job_tracker ['job_2'] ['max_allowed_content'] = long(3617006434256957488);
set job_tracker ['job_2'] ['max_jobs'] = utf8('2');
set job_tracker ['job_2'] ['modified_by'] = utf8(' ');
set job_tracker ['job_2'] ['owner'] = int(1835101801);
set job_tracker ['job_2'] ['query'] = utf8('SELECT c.gooru_oid, c.content_id, c.user_uid, c.creator_uid, CAST(c.sharing AS CHAR(50)), c.last_modified, c.created_on, r.title, CONCAT("http://repopath/", r.folder, r.thumbnail) as thumbnail, r.grade, r.category, CAST(r.views_total AS SIGNED), c.organization_uid, r.type_name, c.last_updated_user_uid, r.url, r.copied_resource_id, r.is_oer, r.record_source, r.license_name, CASE WHEN r.type_name IN("animation/kmz", "animation/swf","exam/pdf","handouts","image/png","ppt/pptx","resource/url","textbook/scribd","video/youtube","gooru/notebook") THEN 1  ELSE CASE WHEN r.type_name IN("gooru/classplan", "gooru/classbook","scollection") THEN 2  ELSE CASE WHEN r.type_name IN ("assessment-quiz","assessment-exam") THEN 3  ELSE CASE WHEN r.type_name IN ("qb/question","assessment-question","question") THEN 4  ELSE CASE WHEN  r.type_name = "classpage" THEN 5  ELSE CASE WHEN  r.type_name = "assignment" THEN 6  ELSE CASE WHEN  r.type_name = "folder" THEN 7  ELSE CASE WHEN r.type_name in ("gooru/classplan", "gooru/classbook") THEN 8  ELSE CASE WHEN r.type_name ="scollection" THEN 9 ELSE 10 END END END END END END END END  END as resource_type,c.last_modified AS endTime,CONCAT("GLP") as app_key, CONCAT("GLP~", gooru_oid) as app_id, r.resource_format_id, r.instructional_id FROM content c INNER JOIN resource r on r.content_id = c.content_id WHERE c.content_id BETWEEN :startValue AND :endValue ; ');
set job_tracker ['job_2'] ['running_jobs'] = utf8('105');
set job_tracker ['job_2'] ['server_name'] = utf8('server');
set job_tracker ['job_2'] ['start_time'] = utf8('2014-09-04 14:04:24');
set job_tracker ['job_2'] ['start_value'] = utf8('980800000');
set job_tracker ['migrate-resource-review-count'] ['column_list'] = utf8('rkey,count~review,endTime');
set job_tracker ['migrate-resource-review-count'] ['end_time'] = utf8('2015-01-01 04:29:10');
set job_tracker ['migrate-resource-review-count'] ['job_name'] = utf8('Resource-Review-Count');
set job_tracker ['migrate-resource-review-count'] ['key_column'] = int(1919640953);
set job_tracker ['migrate-resource-review-count'] ['modified_on'] = utf8('2015-01-02 09:42:03');
set job_tracker ['migrate-resource-review-count'] ['owner'] = utf8('user');
set job_tracker ['migrate-resource-review-count'] ['query'] = utf8('select CAST(concat("all~",assoc_gooru_oid) AS CHAR(80)) AS rkey, count(1) as "count~review", CAST(last_modified_on AS CHAR(60)) as endTime from feedback where feedback_type_id = 3 and feedback_category_id = 20 and length(feedback_text) > 0 and created_date between :startTime and  now() or last_modified_on between :startTime and now() group by assoc_gooru_oid order by last_modified_on');
set job_tracker ['sync_extracted_user'] ['column_list'] = utf8('gooru_uid,organizationUId,teacher,class,school,district,state,country,user_type');
set job_tracker ['sync_extracted_user'] ['end_time'] = utf8('2015-08-05 24:24:10');
set job_tracker ['sync_extracted_user'] ['index_datasource'] = utf8('user_index');
set job_tracker ['sync_extracted_user'] ['index_flag'] = int(1);
set job_tracker ['sync_extracted_user'] ['job_interval'] = long(50000);
set job_tracker ['sync_extracted_user'] ['job_name'] = utf8('Sync Extracted User');
set job_tracker ['sync_extracted_user'] ['key_column'] = utf8('gooru_uid');
set job_tracker ['sync_extracted_user'] ['modified_on'] = utf8('2015-08-10 13:14:30');
set job_tracker ['sync_extracted_user'] ['monitor_job'] = int(1);
set job_tracker ['sync_extracted_user'] ['owner'] = utf8('user');
set job_tracker ['sync_extracted_user'] ['process_type'] = utf8('content');
set job_tracker ['sync_extracted_user'] ['query'] = utf8('select u.gooru_uid,u.organization_uid,"51617" AS teacher, "13141" AS class,CAST(IFNULL(u.school_uid,"ef31f2f4-2a0e-11e5-b345-feff819cdc9f") AS CHAR(60)) AS school, CAST(IFNULL(u.school_district_uid,"00a7f34f-720b-11e4-88a6-2cd4448f7126") AS CHAR(60)) district, CAST(IFNULL(sp.state_province_uid,"fea73315-4ac7-11e4-92cd-2cd4448f7126") AS CHAR(60)) AS state,CAST(IFNULL(sp.country_uid,"d4abc6ee-29f0-11e5-b345-feff819cdc9f") AS CHAR(60)) AS country,pr.user_type from user u inner join profile pr on(pr.user_uid=u.gooru_uid) inner join party p on(p.party_uid=u.gooru_uid) left join state_province sp on(u.state_province_uid=sp.state_province_uid) WHERE p.last_modified_on BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND DATE_ADD(:startTime, INTERVAL 6 MONTH) ORDER BY last_modified_on ASC');
set job_tracker ['sync_extracted_user'] ['running_status'] = int(1);
set job_tracker ['sync_extracted_user'] ['status'] = int(1);
set job_tracker ['sync_extracted_user'] ['target_columnfamily'] = utf8('extracted_user');
set job_tracker ['mark_deleted_content'] ['column_list'] = utf8('key,collection_gooru_oid,endTime');
set job_tracker ['mark_deleted_content'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['mark_deleted_content'] ['job_interval'] = long(50000);
set job_tracker ['mark_deleted_content'] ['job_name'] = utf8('Mark Deleted Content');
set job_tracker ['mark_deleted_content'] ['key_column'] = utf8('key');
set job_tracker ['mark_deleted_content'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['mark_deleted_content'] ['monitor_job'] = int(1);
set job_tracker ['mark_deleted_content'] ['owner'] = utf8('user');
set job_tracker ['mark_deleted_content'] ['process_type'] = utf8('content');
set job_tracker ['mark_deleted_content'] ['query'] = utf8('SELECT collection_item_id,CAST(c.gooru_oid AS CHAR(60)) AS collection_gooru_oid, CAST(c.last_modified AS CHAR(100)) AS endTime FROM content AS c INNER JOIN collection AS cs ON (c.content_id = cs.content_id) LEFT JOIN collection_item AS ci ON (ci.collection_content_id = cs.content_id) WHERE c.last_modified  BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['mark_deleted_content'] ['running_status'] = int(1);
set job_tracker ['mark_deleted_content'] ['start_time'] = utf8('2014-11-27 09:16:39');
set job_tracker ['mark_deleted_content'] ['status'] = int(0);
set job_tracker ['mark_deleted_content'] ['target_columnfamily'] = utf8('collection_item');
set job_tracker ['import-user-created-collection'] ['column_list'] = utf8('gooruUId,createdCollection');
set job_tracker ['import-user-created-collection'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['import-user-created-collection'] ['fields'] = utf8('{"indexName":"user_catalog_info_20141226","indexType":"dim_user","indexKey":"gooruUId","fields":{"createdCollection":"created_collection"}}');
set job_tracker ['import-user-created-collection'] ['index_limit'] = long(10);
set job_tracker ['import-user-created-collection'] ['job_name'] = utf8('import-user-created-collection-count');
set job_tracker ['import-user-created-collection'] ['key_column'] = long(7453298445706938724);
set job_tracker ['import-user-created-collection'] ['modified_on'] = utf8('2015-08-06 12:54:03');
set job_tracker ['import-user-created-collection'] ['monitor_job'] = int(0);
set job_tracker ['import-user-created-collection'] ['offset'] = long(1);
set job_tracker ['import-user-created-collection'] ['owner'] = utf8('user');
set job_tracker ['import-user-created-collection'] ['query'] = utf8('{"fields":"createdCollection,gooruUId","dataSource":"content","granularity":"","filter":[{"logicalOperatorPrefix":"AND","fields":[{"type":"selector","valueType":"String","fieldName":"resourceFormatId","operator":"eq","value":"122"},{"type":"selector","valueType":"String","fieldName":"gooruUId","operator":"in","value":"15239db9-911c-4d80-a152-db3cb4b0c087,ce78eeee-4e8e-440a-aec4-c9e973f94071,0d29d937-e359-4071-a951-a9d02c886dbb,c11397f1-0b6f-4ba5-a5b0-5d0b895365fd"}]}],"aggregations":[{"field1":"gooruOid","formula":"count","name":"createdCollection","requestValues":"field1"}],"groupBy":"gooruUId","pagination":{"offset":0,"limit":10,"order":[{"sortBy":"createdCollection","sortOrder":"DESC"}]}}');
set job_tracker ['import-user-created-collection'] ['running_status'] = int(0);
set job_tracker ['import-user-created-collection'] ['session_token'] = utf8('48cbf85b-598f-4195-b9fd-8d7b5415b8e6');
set job_tracker ['import-user-created-collection'] ['status'] = int(0);
set job_tracker ['migrate-resource-comment-count'] ['column_list'] = utf8('rkey,count~comment,endTime');
set job_tracker ['migrate-resource-comment-count'] ['end_time'] = utf8('2014-12-26 08:36:48');
set job_tracker ['migrate-resource-comment-count'] ['job_name'] = utf8('Resource-Comments-Count');
set job_tracker ['migrate-resource-comment-count'] ['key_column'] = int(1919640953);
set job_tracker ['migrate-resource-comment-count'] ['modified_on'] = utf8('2015-01-02 08:47:42');
set job_tracker ['migrate-resource-comment-count'] ['owner'] = utf8('user');
set job_tracker ['migrate-resource-comment-count'] ['query'] = utf8('select concat("all~", post_gooru_oid) as rkey, count(1) as "count~comment", CAST(last_modified_on AS CHAR(50)) as endTime from comment where created_date between :startTime and  now() or last_modified_on between :startTime and now() group by post_gooru_oid order by last_modified_on');
set job_tracker ['migrate_all_assessment_answer'] ['column_list'] = utf8('rkey,collection_gooru_oid,question_id,answer_id,answer_text,unit,is_correct,sequence,matching_answer_id,type_name,answer_hint,answer_explanation,answer_group_code,question_gooru_oid,question_type');
set job_tracker ['migrate_all_assessment_answer'] ['job_name'] = utf8('Assessment-Answer-All');
set job_tracker ['migrate_all_assessment_answer'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_all_assessment_answer'] ['max_allowed_content'] = long(3617853092587319344);
set job_tracker ['migrate_all_assessment_answer'] ['owner'] = utf8('user');
set job_tracker ['migrate_all_assessment_answer'] ['query'] = utf8('SELECT CAST(CONCAT(CAST(cs.gooru_oid AS CHAR(100)),"~",CAST(c.gooru_oid AS CHAR(100)) ,"~",sequence) AS CHAR(255)) AS rkey,CAST(cs.gooru_oid AS CHAR(100)) AS collection_gooru_oid,qa.question_id,answer_id,CAST(answer_text AS CHAR(5000)) AS answer_text,unit,CAST(is_correct AS UNSIGNED) as is_correct,sequence,matching_answer_id,CAST(qa.type AS CHAR(50)) AS type_name,CAST(answer_hint AS CHAR(5000)) AS answer_hint,CAST(answer_explanation AS CHAR(5000)) AS answer_explanation,answer_group_code,CAST(c.gooru_oid AS CHAR(100)) AS question_gooru_oid,CASE  WHEN aq.type = 1 THEN "MC" ELSE CASE WHEN aq.type = 2 THEN "SA" ELSE CASE WHEN aq.type = 3 THEN "TF" ELSE CASE WHEN aq.type = 4 THEN "FIB" ELSE CASE WHEN aq.type = 5 THEN "MTF" ELSE CASE WHEN aq.type = 6 THEN "OE" ELSE CASE WHEN aq.type = 7 THEN "MA" END END END END END END END AS question_type  FROM assessment_answer AS qa INNER JOIN content AS c ON (qa.question_id =c.content_id) INNER JOIN collection_item AS ci ON (ci.resource_content_id = qa.question_id) INNER JOIN assessment_question AS aq ON (aq.question_id = qa.question_id) INNER JOIN content AS cs ON (cs.content_id = ci.collection_content_id) WHERE  c.content_id BETWEEN :startValue AND :endValue');
set job_tracker ['sync_user_group_assoc_add'] ['column_list'] = utf8('user_group_uid,gooru_uid,username,endTime');
set job_tracker ['sync_user_group_assoc_add'] ['end_time'] = utf8('2015-08-10 13:08:11');
set job_tracker ['sync_user_group_assoc_add'] ['job_interval'] = long(50000);
set job_tracker ['sync_user_group_assoc_add'] ['job_name'] = utf8('Sync User Group Assoc Data');
set job_tracker ['sync_user_group_assoc_add'] ['key_column'] = utf8('user_group_uid');
set job_tracker ['sync_user_group_assoc_add'] ['modified_on'] = utf8('2015-08-10 13:14:30');
set job_tracker ['sync_user_group_assoc_add'] ['monitor_job'] = int(1);
set job_tracker ['sync_user_group_assoc_add'] ['owner'] = utf8('user');
set job_tracker ['sync_user_group_assoc_add'] ['process_type'] = utf8('assoc');
set job_tracker ['sync_user_group_assoc_add'] ['query'] = utf8('SELECT CAST(uga.user_group_uid AS CHAR) AS user_group_uid, CAST(u.gooru_uid AS CHAR) AS gooru_uid, u.username, CAST(uga.association_date AS CHAR) AS endTime FROM user_group_association uga INNER JOIN user u ON (uga.gooru_uid = u.gooru_uid) WHERE uga.is_group_owner = 0 AND uga.association_date BETWEEN DATE_SUB(:startTime, INTERVAL 20 SECOND) AND NOW() ORDER BY uga.association_date ASC');
set job_tracker ['sync_user_group_assoc_add'] ['running_status'] = int(1);
set job_tracker ['sync_user_group_assoc_add'] ['status'] = int(1);
set job_tracker ['sync_user_group_assoc_add'] ['target_columnfamily'] = utf8('user_group_association');
set job_tracker ['sync_resource_used_user_count'] ['column_list'] = utf8('rkey,count~resourceUsedUser,endTime');
set job_tracker ['sync_resource_used_user_count'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['sync_resource_used_user_count'] ['job_interval'] = long(50000);
set job_tracker ['sync_resource_used_user_count'] ['job_name'] = utf8('Resource Used User Sync Resource CF');
set job_tracker ['sync_resource_used_user_count'] ['key_column'] = int(1919640953);
set job_tracker ['sync_resource_used_user_count'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_resource_used_user_count'] ['monitor_job'] = int(1);
set job_tracker ['sync_resource_used_user_count'] ['owner'] = utf8('user');
set job_tracker ['sync_resource_used_user_count'] ['process_type'] = utf8('content');
set job_tracker ['sync_resource_used_user_count'] ['query'] = utf8('select CAST(concat("all~",c.gooru_oid) AS CHAR(40)) as rkey, count(distinct cc.user_uid) as user_count, CAST(ci1.last_modified AS CHAR(55)) as endTime from content c inner join collection_item ci on (ci.resource_content_id = c.content_id) inner join (select distinct cr.content_id, max(c.last_modified) as last_modified from content c inner join collection col on (c.content_id = col.content_id) inner join collection_item ci on (col.content_id = ci.collection_content_id) inner join content cr on (ci.resource_content_id = cr.content_id) where col.collection_type in ("collection", "assessment") and c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() group by cr.content_id) AS ci1 on (ci.resource_content_id = ci1.content_id) inner join content cc on (cc.content_id = ci.collection_content_id) group by c.gooru_oid order by ci1.last_modified ASC');
set job_tracker ['sync_resource_used_user_count'] ['running_status'] = int(1);
set job_tracker ['sync_resource_used_user_count'] ['status'] = int(0);
set job_tracker ['sync_resource_used_user_count'] ['target_columnfamily'] = utf8('live_dashboard');
set job_tracker ['mark_deleted_content_test'] ['column_list'] = utf8('key,collection_gooru_oid,endTime');
set job_tracker ['mark_deleted_content_test'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['mark_deleted_content_test'] ['job_interval'] = long(300000);
set job_tracker ['mark_deleted_content_test'] ['job_name'] = utf8('Mark Deleted Content Test');
set job_tracker ['mark_deleted_content_test'] ['key_column'] = utf8('key');
set job_tracker ['mark_deleted_content_test'] ['modified_on'] = utf8('2015-03-19 12:45:49');
set job_tracker ['mark_deleted_content_test'] ['monitor_job'] = int(0);
set job_tracker ['mark_deleted_content_test'] ['owner'] = utf8('user');
set job_tracker ['mark_deleted_content_test'] ['query'] = utf8('SELECT collection_item_id,CAST(c.gooru_oid AS CHAR(60)) AS collection_gooru_oid, CAST(c.last_modified AS CHAR(100)) AS endTime FROM content AS c INNER JOIN collection AS cs ON (c.content_id = cs.content_id) LEFT JOIN collection_item AS ci ON (ci.collection_content_id = cs.content_id) WHERE c.last_modified  BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['mark_deleted_content_test'] ['running_status'] = int(0);
set job_tracker ['mark_deleted_content_test'] ['start_time'] = utf8('2014-11-27 09:16:39');
set job_tracker ['mark_deleted_content_test'] ['status'] = int(1);
set job_tracker ['sync_class_data_resource_cf'] ['column_list'] = utf8('gooruOId,indexType,title,description,imagePath,resourceType,typeEscaped,lastModified,createdOn,grade,assetURI,lastUpdatedUserUid,versionUid,resourceFormat,creatorString,organization.partyUid,courseContentId,minimumScore,visibility,resourceFormatId,folder,thumbnail,course_gooru_oid,endTime');
set job_tracker ['sync_class_data_resource_cf'] ['end_time'] = utf8('2015-08-10 12:53:39.0');
set job_tracker ['sync_class_data_resource_cf'] ['index_datasource'] = utf8('content_index');
set job_tracker ['sync_class_data_resource_cf'] ['index_flag'] = int(1);
set job_tracker ['sync_class_data_resource_cf'] ['job_interval'] = long(50000);
set job_tracker ['sync_class_data_resource_cf'] ['job_name'] = utf8('Sync Class Data Resource CF');
set job_tracker ['sync_class_data_resource_cf'] ['key_column'] = long(7453298445706545508);
set job_tracker ['sync_class_data_resource_cf'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_class_data_resource_cf'] ['monitor_job'] = int(1);
set job_tracker ['sync_class_data_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_class_data_resource_cf'] ['process_type'] = utf8('content');
set job_tracker ['sync_class_data_resource_cf'] ['query'] = utf8('select c.class_uid, "class" AS index_type, ug.name, c.description, c.image_path, "class" as type_name, "class" as typeEscaped, CAST(p.last_modified_on AS CHAR(30)) as last_modified_on, p.created_on, grades, "http://repopath/" as assetURI, p.last_modified_by_uid, UUID() AS versionUid, "class" AS resourceFormat, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = p.created_by_uid and optional_key = "show_profile_page") as creatorString, ug.organization_uid, c.course_content_id, c.minimum_score, CAST(visibility AS UNSIGNED) AS visibility,131 AS resource_format_id,CONCAT(SUBSTRING_INDEX(image_path, "/", 3),"/") as folder, SUBSTRING_INDEX(image_path, "/", -1) as thumbnail, con.gooru_oid, p.last_modified_on AS endTime from class c inner join party p on (p.party_uid = c.class_uid) inner join user_group ug on (ug.user_group_uid = p.party_uid) left join content con on (con.content_id = c.course_content_id) where p.last_modified_on BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY p.last_modified_on ASC');
set job_tracker ['sync_class_data_resource_cf'] ['running_status'] = int(1);
set job_tracker ['sync_class_data_resource_cf'] ['status'] = int(0);
set job_tracker ['sync_class_data_resource_cf'] ['target_columnfamily'] = long(8243121615520555877);
set job_tracker ['mark_deleted_classpage_test'] ['column_list'] = utf8('key,classpage_gooru_oid,endTime');
set job_tracker ['mark_deleted_classpage_test'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['mark_deleted_classpage_test'] ['job_interval'] = long(300000);
set job_tracker ['mark_deleted_classpage_test'] ['job_name'] = utf8('Mark Deleted Classpage Test');
set job_tracker ['mark_deleted_classpage_test'] ['key_column'] = utf8('key');
set job_tracker ['mark_deleted_classpage_test'] ['modified_on'] = utf8('2015-03-19 13:01:32');
set job_tracker ['mark_deleted_classpage_test'] ['monitor_job'] = int(0);
set job_tracker ['mark_deleted_classpage_test'] ['owner'] = utf8('user');
set job_tracker ['mark_deleted_classpage_test'] ['query'] = utf8('SELECT CAST(CONCAT(c.gooru_oid,"~",ug.user_group_uid,"~",uga.gooru_uid) AS CHAR(250)) AS rkey, CAST(c.gooru_oid AS CHAR(40)) AS classpage_gooru_oid, CAST(c.last_modified AS CHAR(60)) AS endTime  FROM classpage AS cl INNER JOIN content AS c ON (c.content_id = cl.classpage_content_id) INNER JOIN   user_group AS ug ON (ug.user_group_code =cl.classpage_code)   INNER JOIN user_group_association AS uga ON (ug.user_group_uid = uga.user_group_uid)  LEFT JOIN user AS u ON (u.gooru_uid = uga.gooru_uid) WHERE  c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['mark_deleted_classpage_test'] ['running_status'] = int(0);
set job_tracker ['mark_deleted_classpage_test'] ['start_time'] = utf8('2014-11-27 09:16:39');
set job_tracker ['mark_deleted_classpage_test'] ['status'] = int(1);
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['column_list'] = utf8('rkey,count~resourceUsedUserPublic,count~resourceUsedUserPrivate,count~resourceUsedUserSharable,endTime');
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['indexed_count'] = long(26090000);
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['job_name'] = utf8('Sync-User-Count-Of-Resource-Inside-Collection-Sharing-Based_all');
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['key_column'] = int(1919640953);
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['max_allowed_content'] = long(3618132359950446640);
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['max_count'] = long(50000);
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['modified_on'] = utf8('2015-05-21 09:37:20');
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['monitor_job'] = int(0);
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['owner'] = utf8('user');
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['query'] = utf8('select rkey, SUM(CASE WHEN sharing = "public" THEN user_count ELSE 0 END) AS public_count, SUM(CASE sharing WHEN "private" THEN user_count ELSE 0 END) as private_count,SUM(CASE sharing WHEN "anyonewithlink" THEN user_count ELSE 0 END) as anyonewithlink_count, endTime from (select CAST(concat("all~",c.gooru_oid) AS CHAR(40)) as rkey, cc.sharing,count(distinct cc.user_uid) as user_count, CAST(ci1.last_modified AS CHAR(55)) as endTime from content c inner join collection_item ci on (ci.resource_content_id = c.content_id) inner join (select distinct cr.content_id, max(c.last_modified) as last_modified from content c inner join resource r on (c.content_id = r.content_id) inner join collection_item ci on (r.content_id = ci.collection_content_id) inner join content cr on (ci.resource_content_id = cr.content_id)  where r.type_name = "scollection" and c.content_id BETWEEN :startValue AND :endValue group by cr.content_id) AS ci1 on (ci.resource_content_id = ci1.content_id) inner join content cc on (cc.content_id = ci.collection_content_id) group by c.gooru_oid, cc.sharing order by ci1.last_modified ASC) a group by rkey order by endTime');
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['running_status'] = int(0);
set job_tracker ['sync__sharing_based_resource_used_user_count_all'] ['status'] = int(0);
set job_tracker ['migrate_all_dim_resource'] ['column_list'] = utf8('gooru_oid,content_id,user_uid,creator_uid,sharing,last_modified,created_on,title,thumbnail,grade,category,views_count,organization_uid,type_name,last_updated_user_uid,url,copied_resource_id,is_oer,record_source,license_name,resource_type,endTime,app_key,app_id,resource_format_id,instructional_id,description');
set job_tracker ['migrate_all_dim_resource'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['migrate_all_dim_resource'] ['indexed_count'] = long(26020400);
set job_tracker ['migrate_all_dim_resource'] ['job_interval'] = long(300000);
set job_tracker ['migrate_all_dim_resource'] ['job_name'] = utf8('Dim-Resource-All');
set job_tracker ['migrate_all_dim_resource'] ['key_column'] = utf8('app_id');
set job_tracker ['migrate_all_dim_resource'] ['max_allowed_content'] = long(3618132338492716089);
set job_tracker ['migrate_all_dim_resource'] ['max_count'] = long(50000);
set job_tracker ['migrate_all_dim_resource'] ['modified_on'] = utf8('2014-12-16 04:19:56');
set job_tracker ['migrate_all_dim_resource'] ['monitor_job'] = int(0);
set job_tracker ['migrate_all_dim_resource'] ['owner'] = utf8('user');
set job_tracker ['migrate_all_dim_resource'] ['query'] = utf8('SELECT c.gooru_oid, c.content_id, c.user_uid, c.creator_uid, CAST(c.sharing AS CHAR(50)), c.last_modified, c.created_on, r.title, CONCAT("http://repopath/", r.folder, r.thumbnail) as thumbnail, r.grade, r.category, CAST(r.views_total AS SIGNED), c.organization_uid, r.type_name, c.last_updated_user_uid, r.url, r.copied_resource_id, r.is_oer, r.record_source, r.license_name, CASE WHEN r.type_name IN("animation/kmz", "animation/swf","exam/pdf","handouts","image/png","ppt/pptx","resource/url","textbook/scribd","video/youtube","gooru/notebook") THEN 1  ELSE CASE WHEN r.type_name IN("gooru/classplan", "gooru/classbook","scollection") THEN 2  ELSE CASE WHEN r.type_name IN ("assessment-quiz","assessment-exam") THEN 3  ELSE CASE WHEN r.type_name IN ("qb/question","assessment-question","question") THEN 4  ELSE CASE WHEN  r.type_name = "classpage" THEN 5  ELSE CASE WHEN  r.type_name = "assignment" THEN 6  ELSE CASE WHEN  r.type_name = "folder" THEN 7  ELSE CASE WHEN r.type_name in ("gooru/classplan", "gooru/classbook") THEN 8  ELSE CASE WHEN r.type_name ="scollection" THEN 9 ELSE 10 END END END END END END END END  END as resource_type,c.last_modified AS endTime,CONCAT("GLP") as app_key, CONCAT("GLP~", gooru_oid) as app_id, r.resource_format_id, r.instructional_id,CAST(r.description AS CHAR(6000)) AS description, CASE WHEN r.resource_format_id = 100 THEN "video" ELSE CASE WHEN r.resource_format_id = 101 THEN "audio" ELSE CASE WHEN r.resource_format_id = 102 THEN "webpage" ELSE CASE WHEN r.resource_format_id = 103 THEN "interactive" ELSE CASE WHEN r.resource_format_id = 104 THEN "question" ELSE CASE WHEN r.resource_format_id = 105 THEN "image" ELSE CASE WHEN r.resource_format_id = 106 THEN "text" ELSE CASE WHEN r.resource_format_id = 122 THEN "scollection" ELSE CASE WHEN r.resource_format_id = 123 THEN "gooru_classplan" ELSE CASE WHEN r.resource_format_id = 124 THEN "gooru_classbook" ELSE CASE WHEN r.resource_format_id = 125 THEN "gooru_studyshelf" ELSE CASE WHEN r.resource_format_id = 126 THEN "gooru_notebook" ELSE CASE WHEN r.resource_format_id = 127 THEN "qb_response" ELSE CASE WHEN r.resource_format_id = 128 THEN "qb_question" ELSE CASE WHEN r.resource_format_id = 130 THEN "assessment-exam" ELSE CASE WHEN r.resource_format_id = 131 THEN "classpage" ELSE CASE WHEN r.resource_format_id = 132 THEN "assignment" ELSE CASE WHEN r.resource_format_id = 133 THEN "folder" END END END END END END END END END END END END END END END END END END AS resource_format, CASE WHEN r.instructional_id = 92 THEN "activity" ELSE CASE WHEN r.instructional_id = 93 THEN "handout" ELSE CASE WHEN r.instructional_id = 94 THEN "homework" ELSE CASE WHEN r.instructional_id = 95 THEN "game" ELSE CASE WHEN r.instructional_id = 96 THEN "presentation" ELSE CASE WHEN r.instructional_id = 97 THEN "reference_material" ELSE CASE WHEN r.instructional_id = 98 THEN "quiz" ELSE CASE WHEN r.instructional_id = 99 THEN "other" ELSE CASE WHEN r.instructional_id = 134 THEN "book" ELSE CASE WHEN r.instructional_id = 135 THEN "curriculum_plan" ELSE CASE WHEN r.instructional_id = 136 THEN "reading" END END END END END END END END END END END AS instructional FROM content c INNER JOIN resource r on r.content_id = c.content_id WHERE  c.content_id BETWEEN :startValue AND :endValue');
set job_tracker ['migrate_all_dim_resource'] ['running_status'] = int(0);
set job_tracker ['migrate_all_dim_resource'] ['status'] = int(0);
set job_tracker ['content_index'] ['index_api'] = utf8('http://content_index_api');
set job_tracker ['content_index'] ['index_limit'] = long(1);
set job_tracker ['content_index'] ['request_method'] = utf8('GET');
set job_tracker ['content_index'] ['status'] = int(1);
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['column_list'] = utf8('rkey,count~resourceUsedUserPublic,count~resourceUsedUserPrivate,count~resourceUsedUserSharable,endTime');
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['index_on'] = utf8('MicroAggregator');
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['job_interval'] = long(50000);
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['job_name'] = utf8('Sync-User-Count-Of-Resource-Inside-Collection-Sharing-Based');
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['key_column'] = int(1919640953);
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['monitor_job'] = int(1);
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['owner'] = utf8('user');
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['process_type'] = utf8('content');
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['query'] = utf8('SELECT rkey, SUM(CASE WHEN sharing = "public" THEN user_count ELSE 0 END) AS public_count, SUM(CASE sharing WHEN "private" THEN user_count ELSE 0 END) AS private_count, SUM(CASE sharing WHEN "anyonewithlink" THEN user_count ELSE 0 END) AS anyonewithlink_count, endTime FROM (SELECT CAST(CONCAT("all~",c.gooru_oid) AS CHAR(40)) AS rkey, cc.sharing,COUNT(DISTINCT cc.user_uid) AS user_count, CAST(ci1.last_modified AS CHAR(55)) AS endTime FROM content c INNER JOIN collection_item ci ON (ci.resource_content_id = c.content_id) INNER JOIN (SELECT DISTINCT cr.content_id, MAX(c.last_modified) AS last_modified FROM content c INNER JOIN collection cl ON (c.content_id = cl.content_id) INNER JOIN collection_item ci ON (cl.content_id = ci.collection_content_id) INNER JOIN content cr ON (ci.resource_content_id = cr.content_id) WHERE cl.collection_type IN ("collection", "assessment") AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() GROUP BY cr.content_id) AS ci1 ON (ci.resource_content_id = ci1.content_id) INNER JOIN content cc ON (cc.content_id = ci.collection_content_id) GROUP BY c.gooru_oid, cc.sharing ORDER BY ci1.last_modified ASC) a GROUP BY rkey ORDER BY endTime');
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['running_status'] = int(1);
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['status'] = int(0);
set job_tracker ['sync__sharing_based_resource_used_user_count'] ['target_columnfamily'] = utf8('live_dashboard');
set job_tracker ['sync-resource-copied-count'] ['column_list'] = utf8('rkey,count~copy,endTime');
set job_tracker ['sync-resource-copied-count'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['sync-resource-copied-count'] ['job_interval'] = long(50000);
set job_tracker ['sync-resource-copied-count'] ['job_name'] = utf8('Resource-Copied-Count-Sync');
set job_tracker ['sync-resource-copied-count'] ['key_column'] = int(1919640953);
set job_tracker ['sync-resource-copied-count'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['sync-resource-copied-count'] ['monitor_job'] = int(1);
set job_tracker ['sync-resource-copied-count'] ['owner'] = utf8('user');
set job_tracker ['sync-resource-copied-count'] ['process_type'] = utf8('content');
set job_tracker ['sync-resource-copied-count'] ['query'] = utf8('SELECT CONCAT("all~", c.gooru_oid) AS rkey, COUNT(c.gooru_oid) - 1 AS copied_count, CAST(ci1.last_modified AS CHAR(55)) AS endTime FROM content c INNER JOIN collection_item ci ON (ci.resource_content_id = c.content_id) INNER JOIN (SELECT DISTINCT cr.content_id, MAX(c.last_modified) AS last_modified FROM content c INNER JOIN collection cl ON (c.content_id = cl.content_id) INNER JOIN collection_item ci ON (cl.content_id = ci.collection_content_id) INNER JOIN content cr ON (ci.resource_content_id = cr.content_id) WHERE cl.collection_type IN ("collection", "assessment") AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() GROUP BY cr.content_id) AS ci1 ON (ci.resource_content_id = ci1.content_id) GROUP BY c.gooru_oid ORDER BY ci1.last_modified ASC');
set job_tracker ['sync-resource-copied-count'] ['running_status'] = int(1);
set job_tracker ['sync-resource-copied-count'] ['status'] = int(0);
set job_tracker ['sync-resource-copied-count'] ['target_columnfamily'] = utf8('live_dashboard');
set job_tracker ['sync_question_data_resource_cf'] ['column_list'] = utf8('gooruOId,indexType,version,title,description,url,contentId,distinguish,resourceSourceId,thumbnail,folder,resourceType,typeEscaped,category,mediaType,recordSource,sharing,lastModified,createdOn,grade,frameBreaker,statistics.statusIsBroken,assetURI,batchId,lastUpdatedUserUid,isOer,versionUid,clusterUid,isCanonical,resourceTypeNumber,depthOfknowledge,momentsofLearning,educationalUse,licenseString,resourceFormat,instructional,ownerString,creatorString,resourceSourceString,question.gc,question.questionText,question.explanation,question.type,question.answerTexts,question.hintTexts,questionThumbnail,explanationAsset,organization.partyUid,endTime');
set job_tracker ['sync_question_data_resource_cf'] ['end_time'] = utf8('2015-08-10 13:01:16.0');
set job_tracker ['sync_question_data_resource_cf'] ['index_datasource'] = utf8('content_index');
set job_tracker ['sync_question_data_resource_cf'] ['index_flag'] = int(1);
set job_tracker ['sync_question_data_resource_cf'] ['job_interval'] = long(50000);
set job_tracker ['sync_question_data_resource_cf'] ['job_name'] = utf8('Sync Question Data Resource CF');
set job_tracker ['sync_question_data_resource_cf'] ['key_column'] = long(7453298445706545508);
set job_tracker ['sync_question_data_resource_cf'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_question_data_resource_cf'] ['monitor_job'] = int(1);
set job_tracker ['sync_question_data_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_question_data_resource_cf'] ['process_type'] = utf8('content');
set job_tracker ['sync_question_data_resource_cf'] ['query'] = utf8('SELECT c.gooru_oid, "question" AS index_type, c.version, r.title AS title, r.description, r.url AS url, c.content_id, r.distinguish, r.resource_source_id, r.thumbnail, r.folder, r.type_name, (REPLACE(REPLACE(r.type_name, "-",""),"/","")) AS typeEscaped, r.category AS category, r.media_type, r.record_source, c.sharing, CAST(c.last_modified AS CHAR(30)) AS last_modified, CAST(c.created_on AS CHAR(30)) AS created_on, r.grade AS grade, CASE WHEN r.has_frame_breaker = 1 THEN 1 else 0 END AS has_frame_breaker, CASE WHEN r.broken_status = 1 THEN 1 else 0 END AS broken_status, "http://repopath/" AS assetURI, r.batch_id, c.last_updated_user_uid, CASE WHEN r.is_oer = 1 THEN 1 ELSE 0 END AS is_oer, UUID() AS versionUid, r.cluster_uid, CASE WHEN is_representative = 0 THEN 0 ELSE 1 END AS is_representative, 4 AS resourceTypeN, (SELECT GROUP_CONCAT(ctv.value SEPARATOR "~~") FROM content_meta_association cma INNER JOIN custom_table_value ctv ON cma.association_type = ctv.custom_table_value_id WHERE content_id = r.content_id AND association_type in (201,202,203,204)) AS depthOfknowledge, (SELECT GROUP_CONCAT(ctv.value SEPARATOR "~~") FROM content_meta_association cma INNER JOIN custom_table_value ctv ON cma.association_type = ctv.custom_table_value_id WHERE content_id = r.content_id AND association_type in (235,211,234)) AS momentsofLearning, (SELECT GROUP_CONCAT(ctv.value SEPARATOR "~~") FROM content_meta_association cma INNER JOIN custom_table_value ctv ON cma.association_type = ctv.custom_table_value_id WHERE content_id = r.content_id AND association_type in (217,229,231,223,225,219,222,230,227,218,226,224,228,216,221)) AS educationalUse, (SELECT CONCAT(IFNULL(name,"null"),"~~", IFNULL(url,"null"),"~~", IFNULL(code,"null"),"~~", IFNULL(tag,"null"),"~~", IFNULL(icon,"null"),"~~", IFNULL(definition,"null")) FROM license WHERE name = r.license_name) AS licenseString, (SELECT value FROM custom_table_value WHERE custom_table_value_id = r.resource_format_id) AS resourceFormat, (SELECT value FROM custom_table_value WHERE custom_table_value_id = r.instructional_id) AS instructional, (SELECT concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) FROM user u INNER JOIN party_custom_field p ON p.party_uid = u.gooru_uid WHERE u.gooru_uid = c.user_uid AND optional_key = "show_profile_page") AS ownerString, (SELECT concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) FROM user u INNER JOIN party_custom_field p ON p.party_uid = u.gooru_uid WHERE u.gooru_uid = c.creator_uid AND optional_key = "show_profile_page") AS creatorString, (SELECT CONCAT(IFNULL(attribution,"null"),"~~",IFNULL(domain_name,"null"),"~~",IFNULL(active_status,"null"),"~~",IFNULL(type,"null")) FROM resource_source WHERE resource_source_id = r.resource_source_id) AS resourceSourceString, "0" AS gc, aq.question_text, aq.explanation, CASE aq.type WHEN 1 THEN "MC" WHEN 2 THEN "SA" WHEN 3 THEN "T/F" WHEN 4 THEN "FIB" WHEN 5 THEN "MTF" WHEN 6 THEN "OE" WHEN 7 THEN "MA" WHEN 8 THEN "HT_HL" WHEN 9 THEN "HT_RO" WHEN 10 THEN "HS_TXT" WHEN 11 THEN "HS_IMG" END AS question_type, (SELECT GROUP_CONCAT(aa.answer_text SEPARATOR "~~") FROM assessment_answer aa WHERE aa.question_id = aq.question_id) AS answer_text, (SELECT GROUP_CONCAT(hint_text SEPARATOR "~~") FROM assessment_hint WHERE question_id = aq.question_id) AS hint_text, (SELECT a.name AS question_thumbnail FROM assessment_question_asset_assoc aqaa INNER JOIN asset a ON aqaa.asset_id = a.asset_id WHERE aqaa.question_id = aq.question_id AND aqaa.asset_key = "asset-question" ORDER BY a.asset_id ASC limit 1) AS question_thumbnail, (SELECT a.name AS explanation_asset FROM assessment_question_asset_assoc aqaa INNER JOIN asset a ON aqaa.asset_id = a.asset_id WHERE aqaa.question_id = aq.question_id AND aqaa.asset_key = "asset-explanation" 
ORDER BY a.asset_id ASC limit 1) AS explanation_asset, c.organization_uid,c.last_modified AS endTime FROM resource r INNER JOIN content c ON c.content_id = r.content_id INNER JOIN assessment_question aq ON aq.question_id = c.content_id WHERE r.type_name = "assessment-question" AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['sync_question_data_resource_cf'] ['running_status'] = int(1);
set job_tracker ['sync_question_data_resource_cf'] ['status'] = int(0);
set job_tracker ['sync_question_data_resource_cf'] ['target_columnfamily'] = long(8243121615520555877);
set job_tracker ['mark_deleted_classpage_user'] ['column_list'] = utf8('key,classpage_gooru_oid,endTime');
set job_tracker ['mark_deleted_classpage_user'] ['end_time'] = utf8('2015-08-06 07:12:52');
set job_tracker ['mark_deleted_classpage_user'] ['job_interval'] = long(300000);
set job_tracker ['mark_deleted_classpage_user'] ['job_name'] = utf8('Mark Deleted Classpage User');
set job_tracker ['mark_deleted_classpage_user'] ['key_column'] = utf8('key');
set job_tracker ['mark_deleted_classpage_user'] ['modified_on'] = utf8('2015-08-06 13:41:25');
set job_tracker ['mark_deleted_classpage_user'] ['monitor_job'] = int(0);
set job_tracker ['mark_deleted_classpage_user'] ['owner'] = utf8('user');
set job_tracker ['mark_deleted_classpage_user'] ['query'] = utf8('SELECT CAST(CONCAT(c.gooru_oid,"~",ug.user_group_uid,"~",uga.gooru_uid) AS CHAR(250)) AS rkey, CAST(c.gooru_oid AS CHAR(40)) AS classpage_gooru_oid, CAST(c.last_modified AS CHAR(60)) AS endTime  FROM classpage AS cl INNER JOIN content AS c ON (c.content_id = cl.classpage_content_id) INNER JOIN   user_group AS ug ON (ug.user_group_code =cl.classpage_code)   INNER JOIN user_group_association AS uga ON (ug.user_group_uid = uga.user_group_uid)  LEFT JOIN user AS u ON (u.gooru_uid = uga.gooru_uid) WHERE  c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['mark_deleted_classpage_user'] ['running_status'] = int(0);
set job_tracker ['mark_deleted_classpage_user'] ['start_time'] = utf8('2014-11-27 09:16:39');
set job_tracker ['mark_deleted_classpage_user'] ['status'] = int(0);
set job_tracker ['migrate_assessment_answer'] ['column_list'] = utf8('rkey,collection_gooru_oid,question_id,answer_id,answer_text,unit,is_correct,sequence,matching_answer_id,type_name,answer_hint,answer_explanation,answer_group_code,question_gooru_oid,question_type,endTime');
set job_tracker ['migrate_assessment_answer'] ['end_time'] = utf8('2015-08-10 13:00:57');
set job_tracker ['migrate_assessment_answer'] ['job_interval'] = long(50000);
set job_tracker ['migrate_assessment_answer'] ['job_name'] = utf8('Assessment-Answer');
set job_tracker ['migrate_assessment_answer'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_assessment_answer'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['migrate_assessment_answer'] ['monitor_job'] = int(1);
set job_tracker ['migrate_assessment_answer'] ['owner'] = utf8('user');
set job_tracker ['migrate_assessment_answer'] ['process_type'] = utf8('content');
set job_tracker ['migrate_assessment_answer'] ['query'] = utf8('SELECT CAST(CONCAT(CAST(c.gooru_oid AS CHAR(100)),"~",CAST(cr.gooru_oid AS CHAR(100)) ,"~",aa.sequence) AS CHAR(255)) AS rkey,CAST(c.gooru_oid AS CHAR(100)) AS collection_gooru_oid,aq.question_id,aa.answer_id,CAST(aa.answer_text AS CHAR) AS answer_text,aa.unit,CAST(aa.is_correct AS UNSIGNED) as is_correct,aa.sequence,aa.matching_answer_id,CAST(aa.type AS CHAR(50)) AS type_name,CAST(aa.answer_hint AS CHAR) AS answer_hint,CAST(aa.answer_explanation AS CHAR) AS answer_explanation,aa.answer_group_code,CAST(cr.gooru_oid AS CHAR) AS question_gooru_oid,CASE WHEN aq.type = 1 THEN "MC" ELSE CASE WHEN aq.type = 2 THEN "SA" ELSE CASE WHEN aq.type = 3 THEN "TF" ELSE CASE WHEN aq.type = 4 THEN "FIB" ELSE CASE WHEN aq.type = 5 THEN "MTF" ELSE CASE WHEN aq.type = 6 THEN "OE" ELSE CASE WHEN aq.type = 7 THEN "MA" END END END END END END END AS question_type, CAST(c.last_modified AS CHAR) AS endTime FROM content c INNER JOIN collection cl ON (c.content_id = cl.content_id) INNER JOIN collection_item ci ON (ci.collection_content_id = cl.content_id) INNER JOIN content cr ON (ci.resource_content_id = cr.content_id) INNER JOIN assessment_question aq ON (aq.question_id = cr.content_id) INNER JOIN assessment_answer aa ON (aa.question_id = aq.question_id) WHERE cl.collection_type IN ("collection", "assessment") AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['migrate_assessment_answer'] ['running_status'] = int(1);
set job_tracker ['migrate_assessment_answer'] ['start_time'] = utf8('2014-11-12 14:32:03');
set job_tracker ['migrate_assessment_answer'] ['status'] = int(0);
set job_tracker ['migrate_assessment_answer'] ['target_columnfamily'] = utf8('assessment_answer');
set job_tracker ['sync_deleted_content'] ['column_list'] = utf8('gooruOId,endTime');
set job_tracker ['sync_deleted_content'] ['end_time'] = utf8('2015-08-10 12:57:24');
set job_tracker ['sync_deleted_content'] ['job_interval'] = long(50000);
set job_tracker ['sync_deleted_content'] ['job_name'] = utf8('Collection Item Assoc - Key Delete');
set job_tracker ['sync_deleted_content'] ['key_column'] = long(7453298445706545508);
set job_tracker ['sync_deleted_content'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_deleted_content'] ['monitor_job'] = int(1);
set job_tracker ['sync_deleted_content'] ['owner'] = utf8('user');
set job_tracker ['sync_deleted_content'] ['process_type'] = utf8('delete');
set job_tracker ['sync_deleted_content'] ['query'] = utf8('SELECT c.gooru_oid, CAST(c.last_modified AS CHAR) AS endTime FROM content c INNER JOIN collection cl ON (cl.content_id = c.content_id) WHERE cl.collection_type IN ("course", "unit", "lesson") AND c.is_deleted = 1 AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 50 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['sync_deleted_content'] ['running_status'] = int(1);
set job_tracker ['sync_deleted_content'] ['status'] = int(0);
set job_tracker ['sync_deleted_content'] ['target_columnfamily'] = utf8('collection_item_assoc');
set job_tracker ['sync_collection_item_assoc_add'] ['column_list'] = utf8('gooruOId,resourceGooruOid,itemSeq,endTime');
set job_tracker ['sync_collection_item_assoc_add'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['sync_collection_item_assoc_add'] ['job_interval'] = long(50000);
set job_tracker ['sync_collection_item_assoc_add'] ['job_name'] = utf8('Sync Collection Item Data');
set job_tracker ['sync_collection_item_assoc_add'] ['key_column'] = long(7453298445706545508);
set job_tracker ['sync_collection_item_assoc_add'] ['modified_on'] = utf8('2015-08-10 13:14:30');
set job_tracker ['sync_collection_item_assoc_add'] ['monitor_job'] = int(1);
set job_tracker ['sync_collection_item_assoc_add'] ['owner'] = utf8('user');
set job_tracker ['sync_collection_item_assoc_add'] ['process_type'] = utf8('ASSOC');
set job_tracker ['sync_collection_item_assoc_add'] ['query'] = utf8('SELECT CAST(c.gooru_oid AS CHAR) AS content_gooru_oid, CAST(cr.gooru_oid AS CHAR) AS resource_gooru_oid, ci.item_sequence, CAST(ci.last_modified AS CHAR) AS endTime FROM content c INNER JOIN collection_item ci ON (ci.collection_content_id = c.content_id) INNER JOIN content cr ON (ci.resource_content_id = cr.content_id) WHERE cr.is_deleted = 0 AND ci.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 50 SECOND) AND NOW() ORDER BY ci.last_modified ASC');
set job_tracker ['sync_collection_item_assoc_add'] ['running_status'] = int(1);
set job_tracker ['sync_collection_item_assoc_add'] ['status'] = int(1);
set job_tracker ['sync_collection_item_assoc_add'] ['target_columnfamily'] = utf8('collection_item_assoc');
set job_tracker ['process_time_spent'] ['column_list'] = utf8('rkey,gooru_oid');
set job_tracker ['process_time_spent'] ['job_name'] = utf8('Process-Time-Spent-All');
set job_tracker ['process_time_spent'] ['key_column'] = int(1919640953);
set job_tracker ['process_time_spent'] ['max_allowed_content'] = long(3617853092587319344);
set job_tracker ['process_time_spent'] ['modified_on'] = utf8('2014-12-17 01:19:56');
set job_tracker ['process_time_spent'] ['owner'] = utf8('user');
set job_tracker ['process_time_spent'] ['query'] = utf8('SELECT CAST(CONCAT("all~", gooru_oid) AS CHAR(75)) AS rkey, gooru_oid FROM content WHERE content_id BETWEEN :startValue AND :endValue');
set job_tracker ['index_data_settings'] ['index_limit'] = long(500);
set job_tracker ['index_data_settings'] ['list_indexes'] = utf8('user_index,content_index');
set job_tracker ['index_data_settings'] ['status'] = int(1);
set job_tracker ['prod-reosurce-sync-job'] ['end_time'] = utf8('2015-01-15 01:17:52');
set job_tracker ['sync_collection_data_dim_resource_cf'] ['column_list'] = utf8('gooru_oid,content_id,user_uid,creator_uid,sharing,last_modified,created_on,title,thumbnail,grade,organization_uid,type_name,last_modified_by_uid,url,endTime,app_key,app_id,description,resource_format_id');
set job_tracker ['sync_collection_data_dim_resource_cf'] ['end_time'] = utf8('2015-08-10 13:14:05.0');
set job_tracker ['sync_collection_data_dim_resource_cf'] ['job_interval'] = long(50000);
set job_tracker ['sync_collection_data_dim_resource_cf'] ['job_name'] = utf8('Sync Collection Data Dim Resource CF');
set job_tracker ['sync_collection_data_dim_resource_cf'] ['key_column'] = utf8('app_id');
set job_tracker ['sync_collection_data_dim_resource_cf'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_collection_data_dim_resource_cf'] ['monitor_job'] = int(1);
set job_tracker ['sync_collection_data_dim_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_collection_data_dim_resource_cf'] ['process_type'] = utf8('content');
set job_tracker ['sync_collection_data_dim_resource_cf'] ['query'] = utf8('SELECT c.gooru_oid, c.content_id, c.user_uid, c.creator_uid, CAST(c.sharing AS CHAR(50)), c.last_modified, c.created_on, col.title, CONCAT("http://repopath/",col.image_path) as thumbnail, col.grade, c.organization_uid, col.collection_type, c.last_updated_user_uid, col.url, c.last_modified AS endTime,CONCAT("GLP") as app_key, CONCAT("GLP~", gooru_oid) as app_id, CAST(col.description AS CHAR(6000)) AS description,CASE WHEN col.collection_type = "collection" THEN 122 ELSE CASE WHEN col.collection_type="shelf" THEN 125 ELSE CASE WHEN col.collection_type="assessment" THEN 134 ELSE CASE WHEN col.collection_type="folder" THEN 133 ELSE CASE WHEN col.collection_type="quiz" THEN 135 ELSE CASE WHEN col.collection_type="assessment/url" THEN 136 ELSE CASE WHEN col.collection_type="course" THEN 137 ELSE CASE WHEN col.collection_type="unit" THEN 138 ELSE CASE WHEN col.collection_type="lesson" THEN 139 END END END END END END END END END AS resource_format_id FROM content c INNER JOIN collection col ON col.content_id = c.content_id WHERE col.collection_type IN ("collection", "shelf", "assessment", "folder", "quiz", "assessment/url", "course", "unit", "lesson") AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['sync_collection_data_dim_resource_cf'] ['running_status'] = int(1);
set job_tracker ['sync_collection_data_dim_resource_cf'] ['status'] = int(0);
set job_tracker ['sync_collection_data_dim_resource_cf'] ['target_columnfamily'] = utf8('dim_resource');
set job_tracker ['prod-question-sync-job'] ['column_list'] = utf8('gooruOId,indexType,version,title,description,url,contentId,distinguish,resourceSourceId,thumbnail,folder,resourceType,typeEscaped,category,mediaType,recordSource,sharing,lastModified,createdOn,grade,frameBreaker,statistics.statusIsBroken,assetURI,batchId,lastUpdatedUserUid,isOer,versionUid,clusterUid,isCanonical,resourceTypeNumber,depthOfknowledge,momentsofLearning,educationalUse,licenseString,resourceFormat,instructional,ownerString,creatorString,resourceSourceString,organization.partyUid,question.gc,question.questionText,question.explanation,question.questionType,question.answerTexts,question.hintTexts,questionThumbnail,explanationAsset');
set job_tracker ['prod-question-sync-job'] ['end_time'] = utf8('2015-08-06 13:33:09');
set job_tracker ['prod-question-sync-job'] ['job_interval'] = long(300000);
set job_tracker ['prod-question-sync-job'] ['job_name'] = utf8('sync-prod-question');
set job_tracker ['prod-question-sync-job'] ['key_column'] = long(7453298445706545508);
set job_tracker ['prod-question-sync-job'] ['modified_on'] = utf8('2015-08-06 13:33:09');
set job_tracker ['prod-question-sync-job'] ['monitor_job'] = int(0);
set job_tracker ['prod-question-sync-job'] ['owner'] = utf8('user');
set job_tracker ['prod-question-sync-job'] ['query'] = utf8('select c.gooru_oid, "question" as index_type, c.version, r.title as title, r.description, r.url as url, c.content_id, r.distinguish, r.resource_source_id, r.thumbnail, r.folder, r.type_name, (replace(replace(r.type_name, "-",""),"/","")) as typeEscaped, r.category as category, r.media_type, r.record_source, c.sharing, CAST(c.last_modified AS CHAR(30)) as last_modified, CAST(c.created_on AS CHAR(30)) AS created_on, r.grade as grade, CASE WHEN r.has_frame_breaker = 1 THEN 1 else 0 END AS has_frame_breaker, CASE WHEN r.broken_status = 1 THEN 1 else 0 END AS broken_status, "http://repopath/" as assetURI,r.batch_id, c.last_updated_user_uid, CASE WHEN r.is_oer = 1 THEN 1 ELSE 0 END as is_oer, UUID() as versionUid,r.cluster_uid, CASE WHEN is_representative = 0 THEN 0 ELSE 1 END as is_representative, 4 as resourceTypeN, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (201,202,203,204)) as depthOfknowledge, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (235,211,234)) as momentsofLearning, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (217,229,231,223,225,219,222,230,227,218,226,224,228,216,221)) as educationalUse,(select CONCAT(IFNULL(name,"null"),"~~", IFNULL(url,"null"),"~~", IFNULL(code,"null"),"~~", IFNULL(tag,"null"),"~~", IFNULL(icon,"null"),"~~", IFNULL(definition,"null")) from license where name = r.license_name) as licenseString, (select value from custom_table_value where custom_table_value_id = r.resource_format_id) as resourceFormat, (select value from custom_table_value where custom_table_value_id = r.instructional_id) as instructional, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.user_uid and optional_key = "show_profile_page") as ownerString, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.creator_uid and optional_key = "show_profile_page") as creatorString, (select CONCAT(IFNULL(attribution,"null"),"~~",IFNULL(domain_name,"null"),"~~",IFNULL(active_status,"null"),"~~",IFNULL(type,"null")) from resource_source where resource_source_id = r.resource_source_id) as resourceSourceString, c.organization_uid, "0" as gc, aq.question_text, aq.explanation, CASE aq.type WHEN 1 THEN "MC" WHEN 2 THEN "SA" WHEN 3 THEN "T/F" WHEN 4 THEN "FIB" WHEN 5 THEN "MTF" WHEN 6 THEN "OE" WHEN 7 THEN "MA" END AS question_type, (select GROUP_CONCAT(aa.answer_text SEPARATOR "~~") from assessment_answer aa where aa.question_id = aq.question_id) as answer_text, (select GROUP_CONCAT(hint_text SEPARATOR "~~") from assessment_hint where question_id = aq.question_id) as hint_text, (SELECT a.name as question_thumbnail from assessment_question_asset_assoc aqaa inner join asset a on aqaa.asset_id = a.asset_id where aqaa.question_id = aq.question_id and aqaa.asset_key = "asset-question" order by a.asset_id ASC limit 1) as question_thumbnail,(SELECT a.name as explanation_asset from assessment_question_asset_assoc aqaa inner join asset a on aqaa.asset_id = a.asset_id where aqaa.question_id = aq.question_id and aqaa.asset_key = "asset-explanation" order by a.asset_id ASC limit 1) as explanation_asset   from resource r inner 
join content c on c.content_id = r.content_id inner join assessment_question aq on aq.question_id = c.content_id where r.type_name in ("qb/question","assessment-question","question") and c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['prod-question-sync-job'] ['running_status'] = int(0);
set job_tracker ['prod-question-sync-job'] ['start_time'] = utf8('2014-11-12 18:45:30');
set job_tracker ['prod-question-sync-job'] ['status'] = int(0);
set job_tracker ['sync_resource_added_count'] ['column_list'] = utf8('rkey,count~resourceAddedPublic,count~resourceAddedPrivate,count~resourceAddedSharable,count~resourceAdded,endTime');
set job_tracker ['sync_resource_added_count'] ['endTime'] = utf8('2015-07-23 11:17:31');
set job_tracker ['sync_resource_added_count'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['sync_resource_added_count'] ['index_on'] = utf8('MicroAggregator');
set job_tracker ['sync_resource_added_count'] ['job_interval'] = long(50000);
set job_tracker ['sync_resource_added_count'] ['job_name'] = utf8('Resource-Copied-Count-Sync-ResourceCF');
set job_tracker ['sync_resource_added_count'] ['key_column'] = int(1919640953);
set job_tracker ['sync_resource_added_count'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['sync_resource_added_count'] ['monitor_job'] = int(1);
set job_tracker ['sync_resource_added_count'] ['owner'] = utf8('user');
set job_tracker ['sync_resource_added_count'] ['process_type'] = utf8('content');
set job_tracker ['sync_resource_added_count'] ['query'] = utf8('SELECT CAST(CONCAT("all~",c.gooru_oid) AS CHAR(40)) AS rkey, SUM(CASE cc.sharing WHEN "public" THEN 1 END) AS public_count, SUM(CASE cc.sharing WHEN "private" THEN 1 END) AS private_count,SUM(CASE cc.sharing WHEN "anyonewithlink" THEN 1 END) AS anyonewithlink_count , COUNT(c.gooru_oid) AS added_count, CAST(ci1.last_modified AS CHAR(55)) AS endTime FROM content c INNER JOIN collection_item ci ON (ci.resource_content_id = c.content_id) INNER JOIN (SELECT DISTINCT cr.content_id, MAX(c.last_modified) AS last_modified FROM content c INNER JOIN collection cl ON (c.content_id = cl.content_id) INNER JOIN collection_item ci ON (cl.content_id = ci.collection_content_id) INNER JOIN content cr ON (ci.resource_content_id = cr.content_id) WHERE cl.collection_type IN ("collection", "assessment") AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() GROUP BY cr.content_id) AS ci1 ON (ci.resource_content_id = ci1.content_id) INNER JOIN content cc ON (cc.content_id = ci.collection_content_id) GROUP BY c.gooru_oid ORDER BY ci1.last_modified ASC');
set job_tracker ['sync_resource_added_count'] ['running_status'] = int(1);
set job_tracker ['sync_resource_added_count'] ['status'] = int(0);
set job_tracker ['sync_resource_added_count'] ['target_columnfamily'] = utf8('live_dashboard');
set job_tracker ['migrate_events_by_session'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['migrate_events_by_session'] ['job_name'] = utf8('Process Events Based on Sessions');
set job_tracker ['migrate_events_by_session'] ['modified_on'] = utf8('2015-08-06 12:54:03');
set job_tracker ['migrate_events_by_session'] ['monitor_job'] = int(0);
set job_tracker ['migrate_events_by_session'] ['owner'] = utf8('user');
set job_tracker ['migrate_events_by_session'] ['query'] = utf8('SELECT session_id FROM temp_collection_session WHERE session_id IS NOT NULL AND status = 0 LIMIT 1000');
set job_tracker ['migrate_events_by_session'] ['running_status'] = int(0);
set job_tracker ['migrate_events_by_session'] ['status'] = int(1);
set job_tracker ['migrate_dim_user'] ['end_time'] = utf8('2013-03-26 07:48:39');
set job_tracker ['migrate_dim_user'] ['query'] = utf8('SELECT u.gooru_uid AS rkey, group_concat(ur.name) as user_role, u.gooru_uid, u.firstname, u.lastname, u.username, CAST(u.role_id AS UNSIGNED) AS role_id, u.account_uid, u.security_group_uid, u.register_token, CAST(u.confirm_status AS UNSIGNED) AS confirm_status, u.license_version, u.mail_status, CAST(u.added_by_system AS UNSIGNED) AS added_by_system, u.import_code, u.parent_id, u.parent_uid, CAST(u.account_type_id AS UNSIGNED) AS account_type_id, u.organization_uid, u.user_group_uid, u.primary_organization_uid, CAST(u.view_flag AS UNSIGNED) AS view_flag, CAST(u.is_deleted AS UNSIGNED) AS is_deleted, u.reference_uid, i.identity_id, i.idp_id, CAST(i.active AS UNSIGNED) AS active, i.registered_on, i.deactivated_on, i.external_id, i.last_login, i.account_created_type, i.login_type, i.email_sso, i.last_login as endTime FROM user AS u INNER JOIN identity AS i ON (u.gooru_uid = i.user_uid) INNER JOIN user_role_assoc ura ON (ura.user_uid = i.user_uid) INNER JOIN user_role ur ON (ur.role_id = ura.role_id) WHERE i.last_login BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() AND u.organization_uid IN ("26855847-abf2-4201-bfe8-5935b794b6b6", "e70714d4-cab6-48fd-b1d9-7d03576c82a0", "0e7545da-8aa4-4361-a37b-b3ac95159700") group by u.gooru_uid ORDER BY i.last_login ASC;');
set job_tracker ['sync_content_metadata'] ['column_list'] = utf8('gooruOid,endTime');
set job_tracker ['sync_content_metadata'] ['end_time'] = utf8('2015-08-10 13:13:03');
set job_tracker ['sync_content_metadata'] ['job_interval'] = long(50000);
set job_tracker ['sync_content_metadata'] ['job_name'] = utf8('Sync-Content-MetaData');
set job_tracker ['sync_content_metadata'] ['key_column'] = long(7453298445706553700);
set job_tracker ['sync_content_metadata'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_content_metadata'] ['monitor_job'] = int(1);
set job_tracker ['sync_content_metadata'] ['owner'] = utf8('user');
set job_tracker ['sync_content_metadata'] ['process_type'] = utf8('content');
set job_tracker ['sync_content_metadata'] ['query'] = utf8('SELECT gooru_oid, CAST(c.last_modified AS CHAR) endTime FROM content c INNER JOIN collection cl ON (c.content_id = cl.content_id) WHERE cl.collection_type = "lesson" AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 20 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['sync_content_metadata'] ['running_status'] = int(1);
set job_tracker ['sync_content_metadata'] ['status'] = int(0);
set job_tracker ['sync_content_metadata'] ['target_columnfamily'] = utf8('content_meta');
set job_tracker ['prod-scollection-sync-job'] ['column_list'] = utf8('gooruOId,indexType,version,title,description,url,contentId,distinguish,resourceSourceId,thumbnail,folder,resourceType,typeEscaped,category,mediaType,recordSource,sharing,lastModified,createdOn,grade,frameBreaker,statistics.statusIsBroken,assetURI,batchId,lastUpdatedUserUid,isOer,versionUid,clusterUid,isCanonical,resourceTypeN,depthOfknowledge,momentsofLearning,educationalUse,licenseString,resourceFormat,instructional,ownerString,creatorString,resourceSourceString,organization.partyUid,sCollectionCo.collectionType,sCollectionCo.narrationLink,sCollectionCo.notes,sCollectionCo.keyPoints,sCollectionCo.language,sCollectionCo.goals,sCollectionCo.estimatedTime,sCollectionCo.network,tags,sCollectionCo.languageObjective,sCollectionCo.clusterUid,sCollectionCo.isCanonical,sCollectionCo.audience,sCollectionCo.instructionMethod,sCollectionCo.learningAndInovation');
set job_tracker ['prod-scollection-sync-job'] ['end_time'] = utf8('2015-08-06 13:32:57');
set job_tracker ['prod-scollection-sync-job'] ['job_interval'] = long(300000);
set job_tracker ['prod-scollection-sync-job'] ['job_name'] = utf8('sync-prod-scollection');
set job_tracker ['prod-scollection-sync-job'] ['key_column'] = long(7453298445706545508);
set job_tracker ['prod-scollection-sync-job'] ['modified_on'] = utf8('2015-08-06 13:32:57');
set job_tracker ['prod-scollection-sync-job'] ['monitor_job'] = int(0);
set job_tracker ['prod-scollection-sync-job'] ['owner'] = utf8('user');
set job_tracker ['prod-scollection-sync-job'] ['query'] = utf8('select c.gooru_oid, "scollection" as index_type, c.version, r.title as title, r.description, r.url as url, c.content_id, r.distinguish, r.resource_source_id, r.thumbnail, r.folder, r.type_name, (replace(replace(r.type_name, "-",""),"/","")) as typeEscaped, r.category as category, r.media_type, r.record_source, c.sharing, CAST(c.last_modified AS CHAR(30)) as last_modified, CAST(c.created_on AS CHAR(30)) AS created_on, r.grade as grade, CASE WHEN r.has_frame_breaker = 1 THEN 1 else 0 END AS has_frame_breaker, CASE WHEN r.broken_status = 1 THEN 1 else 0 END AS broken_status, "http://repopath/" as assetURI,r.batch_id, c.last_updated_user_uid, CASE WHEN r.is_oer = 1 THEN 1 ELSE 0 END as is_oer, UUID() as versionUid,r.cluster_uid, CASE WHEN r.is_representative = 0 THEN 0 ELSE 1 END as is_representative, 9 as resourceTypeN, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (201,202,203,204)) as depthOfknowledge, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (235,211,234)) as momentsofLearning, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (217,229,231,223,225,219,222,230,227,218,226,224,228,216,221)) as educationalUse,(select CONCAT(IFNULL(name,"null"),"~~", IFNULL(url,"null"),"~~", IFNULL(code,"null"),"~~", IFNULL(tag,"null"),"~~", IFNULL(icon,"null"),"~~", IFNULL(definition,"null")) from license where name = r.license_name) as licenseString, (select value from custom_table_value where custom_table_value_id = r.resource_format_id) as resourceFormat, (select value from custom_table_value where custom_table_value_id = r.instructional_id) as instructional, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.user_uid and optional_key = "show_profile_page") as ownerString, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.creator_uid and optional_key = "show_profile_page") as creatorString, (select CONCAT(IFNULL(attribution,"null"),"~~",IFNULL(domain_name,"null"),"~~",IFNULL(active_status,"null"),"~~",IFNULL(type,"null")) from resource_source where resource_source_id = r.resource_source_id) as resourceSourceString, c.organization_uid, col.collection_type, col.narration_link, col.notes, col.key_points,col.language, col.goals, col.estimated_time, col.network, r.tags, col.language_objective, col.cluster_uid as collectionClusterUid, CASE WHEN col.is_representative = 0 THEN 0 ELSE 1 END as collectionRepresentative,(select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (195,198,197,196,199,200)) as audience, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (208,210,209)) as instructionMethod, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.
content_id and association_type in (207,206,205)) as learningAndInovation from resource r inner join content c on c.content_id = r.content_id inner join collection col on col.content_id = r.content_id where r.type_name in ("scollection") and c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['prod-scollection-sync-job'] ['running_status'] = int(0);
set job_tracker ['prod-scollection-sync-job'] ['start_time'] = utf8('2014-11-25 19:55:21');
set job_tracker ['prod-scollection-sync-job'] ['status'] = int(0);
set job_tracker ['migrate_extracted_user'] ['column_list'] = utf8('gooru_uid,organization_uid,tax_ids,grade,user_type,endTime');
set job_tracker ['migrate_extracted_user'] ['end_time'] = utf8('2015-08-06 13:22:12');
set job_tracker ['migrate_extracted_user'] ['job_interval'] = long(3000000000000);
set job_tracker ['migrate_extracted_user'] ['job_name'] = utf8('Extracted-User');
set job_tracker ['migrate_extracted_user'] ['key_column'] = utf8('gooru_uid');
set job_tracker ['migrate_extracted_user'] ['modified_on'] = utf8('2015-08-06 13:41:30');
set job_tracker ['migrate_extracted_user'] ['monitor_job'] = int(0);
set job_tracker ['migrate_extracted_user'] ['owner'] = utf8('user');
set job_tracker ['migrate_extracted_user'] ['query'] = utf8('select gooru_uid,organization_uid, CAST(group_concat(distinct uc.code_id) AS CHAR(1500)) as tax_ids, CAST(group_concat(distinct ucg.grade) AS CHAR(1500)) as grade, user_type, endTime from (SELECT gooru_uid, "51617" AS teacher, "13141" AS class, IFNULL(school_uid, "01112") AS school, IFNULL(school_district_uid,"00a7f34f-720b-11e4-88a6-2cd4448f7126") AS district, IFNULL(state_province_uid, "fea73315-4ac7-11e4-92cd-2cd4448f7126") AS state, organization_uid, CAST(p.user_type AS CHAR(255)) AS user_type, CAST(i.last_login AS CHAR(60)) AS endTime FROM user u INNER JOIN identity i ON (i.user_uid = u.gooru_uid) LEFT JOIN profile p ON (p.user_uid = i.user_uid) WHERE i.last_login BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY last_login ASC) as u left join user_classification uc on (u.gooru_uid = uc.user_uid) left join user_classification ucg on (ucg.user_uid = u.gooru_uid) where uc.classification_type = 39 and ucg.classification_type = 72 group by u.gooru_uid order by endTime');
set job_tracker ['migrate_extracted_user'] ['running_status'] = int(0);
set job_tracker ['migrate_extracted_user'] ['start_time'] = utf8('2014-11-12 06:32:09');
set job_tracker ['migrate_extracted_user'] ['status'] = int(0);
set job_tracker ['migrate-collection-copied-count'] ['column_list'] = utf8('rkey,count~copy');
set job_tracker ['migrate-collection-copied-count'] ['job_name'] = utf8('Collection-Copied-Count-All');
set job_tracker ['migrate-collection-copied-count'] ['key_column'] = int(1919640953);
set job_tracker ['migrate-collection-copied-count'] ['max_allowed_content'] = long(3617856374076290096);
set job_tracker ['migrate-collection-copied-count'] ['modified_on'] = utf8('2014-12-16 04:19:56');
set job_tracker ['migrate-collection-copied-count'] ['owner'] = utf8('user');
set job_tracker ['migrate-collection-copied-count'] ['query'] = utf8('select concat("all~", r.copied_resource_id) as rkey, count(r.copied_resource_id) as copied_count from resource r inner join (select distinct r.copied_resource_id from content c inner join resource r on (c.content_id = r.content_id) where r.type_name in ("scollection","folder") and c.content_id between :startValue and :endValue ) r1 on (r.copied_resource_id = r1.copied_resource_id) group by r.copied_resource_id');
set job_tracker ['monitor~kafka~log~consumer'] ['mail_loop_count'] = int(5);
set job_tracker ['monitor~kafka~log~consumer'] ['status'] = int(1);
set job_tracker ['monitor~kafka~log~consumer'] ['thread_loop_count'] = int(20);
set job_tracker ['monitor~kafka~log~consumer'] ['thread_sleep_time'] = long(50000);
set job_tracker ['monitor~kafka~consumer'] ['mail_loop_count'] = int(5);
set job_tracker ['monitor~kafka~consumer'] ['status'] = int(1);
set job_tracker ['monitor~kafka~consumer'] ['thread_loop_count'] = int(20);
set job_tracker ['monitor~kafka~consumer'] ['thread_sleep_time'] = long(50000);
set job_tracker ['migrate-user-review-count'] ['column_list'] = utf8('rkey,count~review,endTime');
set job_tracker ['migrate-user-review-count'] ['end_time'] = utf8('2014-12-31 23:41:13');
set job_tracker ['migrate-user-review-count'] ['job_name'] = utf8('User-Review-Count');
set job_tracker ['migrate-user-review-count'] ['key_column'] = int(1919640953);
set job_tracker ['migrate-user-review-count'] ['modified_on'] = utf8('2015-01-02 09:39:39');
set job_tracker ['migrate-user-review-count'] ['owner'] = utf8('user');
set job_tracker ['migrate-user-review-count'] ['query'] = utf8('select CAST(CONCAT("all~", creator_uid) AS CHAR(55)) AS rkey, count(1) as "count~review", CAST(last_modified_on AS CHAR(60)) as endTime from feedback where feedback_type_id = 3 and feedback_category_id = 20 and length(feedback_text) > 0 and created_date between :startTime and  now() or last_modified_on between :startTime and now() group by creator_uid order by last_modified_on');
set job_tracker ['job_3'] ['column_list'] = utf8('gooru_oid,score,count');
set job_tracker ['job_3'] ['end_time'] = utf8('2014-09-05 07:32:37.0');
set job_tracker ['job_3'] ['job_name'] = utf8('dim_resource');
set job_tracker ['job_3'] ['job_path'] = utf8('dim_resource');
set job_tracker ['job_3'] ['key_column'] = utf8('app_id');
set job_tracker ['job_3'] ['max_allowed_content'] = long(3617006434256957488);
set job_tracker ['job_3'] ['max_jobs'] = utf8('100');
set job_tracker ['job_3'] ['modified_by'] = utf8(' ');
set job_tracker ['job_3'] ['owner'] = int(1835101801);
set job_tracker ['job_3'] ['query'] = utf8('select f.assoc_gooru_oid , score , count(1) as count from feedback f inner join custom_table_value c on f.feedback_type_id = c.custom_table_value_id where  c.key_value="feedback_rating_type_star" and score is not null  group by score,f.assoc_gooru_oid; ');
set job_tracker ['job_3'] ['running_jobs'] = utf8('103');
set job_tracker ['job_3'] ['server_name'] = utf8('server');
set job_tracker ['job_3'] ['start_time'] = utf8('2014-09-04 14:04:24');
set job_tracker ['job_3'] ['start_value'] = utf8('442480000');
set job_tracker ['migrate_question_count'] ['column_list'] = utf8('gooru_oid,collection_Content_id,mcCount,oeCount,questionCount,resourceCount,endTime');
set job_tracker ['migrate_question_count'] ['end_time'] = utf8('2015-08-06 13:38:37');
set job_tracker ['migrate_question_count'] ['job_interval'] = long(300000);
set job_tracker ['migrate_question_count'] ['job_name'] = utf8('Question-Count');
set job_tracker ['migrate_question_count'] ['key_column'] = utf8('gooru_oid');
set job_tracker ['migrate_question_count'] ['modified_on'] = utf8('2015-08-06 13:41:25');
set job_tracker ['migrate_question_count'] ['monitor_job'] = int(0);
set job_tracker ['migrate_question_count'] ['owner'] = utf8('user');
set job_tracker ['migrate_question_count'] ['query'] = utf8('SELECT c.gooru_oid,ci.collection_content_id AS collection_Content_id,COUNT(CASE WHEN aq.type in (1,3) THEN ci.resource_content_id END) AS mcCount,COUNT(CASE WHEN aq.type =6  THEN ci.resource_content_id END) AS oeCount,COUNT(CASE WHEN aq.question_id > 0 THEN aq.question_id END) AS questionCount, COUNT(ci.resource_content_id) AS resourceCount,CAST(c.last_modified AS CHAR(100)) AS endTime FROM collection_item AS ci INNER JOIN content AS c ON (ci.collection_content_id = c.content_id) LEFT JOIN assessment_question AS aq ON (aq.question_id = ci.resource_content_id) WHERE c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() group by ci.collection_content_id ORDER BY c.last_modified ASC');
set job_tracker ['migrate_question_count'] ['running_status'] = int(0);
set job_tracker ['migrate_question_count'] ['start_time'] = utf8('2014-11-12 06:32:09');
set job_tracker ['migrate_question_count'] ['status'] = int(0);
set job_tracker ['migrate_all_question_count'] ['column_list'] = utf8('gooru_oid,collection_Content_id,mcCount,oeCount,questionCount,resourceCount');
set job_tracker ['migrate_all_question_count'] ['job_name'] = utf8('Question-Count-All');
set job_tracker ['migrate_all_question_count'] ['key_column'] = utf8('gooru_oid');
set job_tracker ['migrate_all_question_count'] ['owner'] = utf8('user');
set job_tracker ['migrate_all_question_count'] ['query'] = utf8('select c.gooru_oid,ci.collection_content_id AS collection_Content_id,COUNT(CASE WHEN aq.type in (1,3) THEN ci.resource_content_id END) AS mcCount,COUNT(CASE WHEN aq.type =6  THEN ci.resource_content_id END) AS oeCount,COUNT(CASE WHEN aq.question_id > 0 THEN aq.question_id END) AS questionCount, COUNT(ci.resource_content_id) AS resourceCount FROM collection_item AS ci INNER JOIN content AS c ON (ci.collection_content_id = c.content_id) LEFT JOIN assessment_question AS aq ON (aq.question_id = ci.resource_content_id) WHERE  c.content_id BETWEEN :startValue AND :endValue group by ci.collection_content_id');
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['column_list'] = utf8('rkey,count~resourceUsedUser,endTime');
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['indexed_count'] = long(26080000);
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['job_name'] = utf8('Sync-User-Count-Of-Resource-Inside-Collection-Resource-CF-All');
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['key_column'] = int(1919640953);
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['max_allowed_content'] = long(3618132359950446640);
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['max_count'] = long(50000);
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['modified_on'] = utf8('2015-05-21 09:29:30');
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['monitor_job'] = int(0);
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['owner'] = utf8('user');
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['query'] = utf8('select CAST(concat("all~",c.gooru_oid) AS CHAR(40)) as rkey, count(distinct cc.user_uid) as user_count, CAST(ci1.last_modified AS CHAR(55)) as endTime from content c inner join collection_item ci on (ci.resource_content_id = c.content_id) inner join (select distinct cr.content_id, max(c.last_modified) as last_modified from content c inner join resource r on (c.content_id = r.content_id) inner join collection_item ci on (r.content_id = ci.collection_content_id) inner join content cr on (ci.resource_content_id = cr.content_id)  where r.type_name = "scollection" and c.content_id BETWEEN :startValue AND :endValue group by cr.content_id) AS ci1 on (ci.resource_content_id = ci1.content_id) inner join content cc on (cc.content_id = ci.collection_content_id) group by c.gooru_oid order by ci1.last_modified ASC');
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['running_status'] = int(0);
set job_tracker ['sync_resource_used_user_count_resource_cf_all'] ['status'] = int(0);
set job_tracker ['sync_collection_copied_count_resource_cf'] ['column_list'] = utf8('rkey,statistics.scollectionRemixCount,endTime');
set job_tracker ['sync_collection_copied_count_resource_cf'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['sync_collection_copied_count_resource_cf'] ['job_interval'] = long(300000);
set job_tracker ['sync_collection_copied_count_resource_cf'] ['job_name'] = utf8('Collection-Copied-Count-Sync-Resource-CF');
set job_tracker ['sync_collection_copied_count_resource_cf'] ['key_column'] = int(1919640953);
set job_tracker ['sync_collection_copied_count_resource_cf'] ['modified_on'] = utf8('2015-04-20 14:30:50');
set job_tracker ['sync_collection_copied_count_resource_cf'] ['monitor_job'] = int(0);
set job_tracker ['sync_collection_copied_count_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_collection_copied_count_resource_cf'] ['query'] = utf8('select CAST(r.copied_resource_id AS CHAR(40)) as rkey, count(r.copied_resource_id) as copied_count, CAST(r1.last_modified AS CHAR(55)) as endTime from resource r inner join (select distinct r.copied_resource_id, c.last_modified from content c inner join resource r on (c.content_id = r.content_id) where r.type_name in ("scollection","folder") and c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ) r1 on (r.copied_resource_id = r1.copied_resource_id) group by r.copied_resource_id order by r1.last_modified ASC;');
set job_tracker ['sync_collection_copied_count_resource_cf'] ['running_status'] = int(0);
set job_tracker ['sync_collection_copied_count_resource_cf'] ['status'] = int(0);
set job_tracker ['migrate_collection_item'] ['column_list'] = utf8('rkey,deleted,resource_content_id,collection_gooru_oid,resource_gooru_oid,item_sequence,minimum_score,item_type,collection_item_id,narration,estimated_time,collection_content_id,start,stop,question_type,narration_type,endTime,errorData,planned_end_date,association_date,associated_by_uid,is_required');
set job_tracker ['migrate_collection_item'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['migrate_collection_item'] ['job_interval'] = long(50000);
set job_tracker ['migrate_collection_item'] ['job_name'] = utf8('Collection Item');
set job_tracker ['migrate_collection_item'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_collection_item'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['migrate_collection_item'] ['monitor_job'] = int(1);
set job_tracker ['migrate_collection_item'] ['owner'] = utf8('user');
set job_tracker ['migrate_collection_item'] ['process_type'] = utf8('content');
set job_tracker ['migrate_collection_item'] ['query'] = utf8('SELECT ci.collection_item_id AS rkey, 0 AS deleted, ci.resource_content_id, CAST(c.gooru_oid AS CHAR(100)) AS collection_gooru_oid, CAST(cr.gooru_oid AS CHAR(100)) AS resource_gooru_oid, ci.item_sequence AS item_sequence, ci.minimum_score AS minimum_score, ci.item_type AS item_type, ci.collection_item_id AS collection_item_id, ci.narration as narration, ci.estimated_time AS estimated_time, ci.collection_content_id, ci.start, ci.stop, CASE WHEN qa.type = 1 THEN "MC" ELSE CASE WHEN qa.type = 2 THEN "SA" ELSE CASE WHEN qa.type = 3 THEN "TF" ELSE CASE WHEN qa.type = 4 THEN "FIB" ELSE CASE WHEN qa.type = 5 THEN "MTF" ELSE CASE WHEN qa.type = 6 THEN "OE" ELSE CASE WHEN qa.type = 7 THEN "MA" ELSE CASE WHEN qa.type = 8 THEN "HT_HL" ELSE CASE WHEN qa.type = 9 THEN "HT_RO" ELSE CASE WHEN qa.type = 10 THEN "HS_TXT" ELSE CASE WHEN qa.type = 11 THEN "HS_IMG" END END END END END END END END END END END AS question_type, ci.narration_type, CAST(c.last_modified AS CHAR(100)) AS endTime, 1 AS errorData, ci.planned_end_date, ci.association_date AS association_date, ci.associated_by_uid AS associated_by_uid, CAST(ci.is_required AS UNSIGNED) AS is_required FROM content AS c INNER JOIN collection_item AS ci ON (c.content_id = ci.collection_content_id) INNER JOIN content AS cr ON (cr.content_id=ci.resource_content_id) LEFT JOIN assessment_question AS qa ON (qa.question_id = ci.resource_content_id) WHERE c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['migrate_collection_item'] ['running_status'] = int(1);
set job_tracker ['migrate_collection_item'] ['start_time'] = utf8('2014/11/07 12:26:48.000');
set job_tracker ['migrate_collection_item'] ['status'] = int(0);
set job_tracker ['migrate_collection_item'] ['target_columnfamily'] = utf8('collection_item');
set job_tracker ['sync_user_reaction_count'] ['column_list'] = utf8('rkey,count~reactions,count~i-can-explain,count~i-can-understand,count~i-donot-understand,count~i-need-help,count~meh,sum~reactionType,endTime');
set job_tracker ['sync_user_reaction_count'] ['end_time'] = utf8('2015-01-02 10:03:57');
set job_tracker ['sync_user_reaction_count'] ['job_name'] = utf8('User-Reactions-Count');
set job_tracker ['sync_user_reaction_count'] ['key_column'] = int(1919640953);
set job_tracker ['sync_user_reaction_count'] ['modified_on'] = utf8('2015-01-02 10:03:57');
set job_tracker ['sync_user_reaction_count'] ['owner'] = utf8('user');
set job_tracker ['sync_user_reaction_count'] ['query'] = utf8('select CONCAT("all~", f.creator_uid) AS creator_uid , count(1) as "count~reactions", COUNT(CASE WHEN c.value = "i-can-explain" THEN f.creator_uid END) AS "count~i-can-explain", COUNT(CASE WHEN c.value = "i-can-understand" THEN f.creator_uid END) AS "count~i-can-understand", COUNT(CASE WHEN c.value = "i-donot-understand" THEN f.creator_uid END) AS "count~i-donot-understand", COUNT(CASE WHEN c.value = "i-need-help" THEN f.creator_uid END) AS "count~i-need-help", COUNT(CASE WHEN c.value = "meh" THEN f.creator_uid END) AS "count~meh",sum(IF (c.value = "i-need-help",1,IF(c.value = "meh",3,IF(c.value = "i-donot-understand",2,IF(c.value = "i-can-understand",4,IF(c.value = "i-can-explain",5,0)))))) as "sum~reactionType", CAST(last_modified_on AS CHAR(60)) as endTime from feedback f inner join custom_table_value c on (f.feedback_type_id = c.custom_table_value_id) inner join (SELECT distinct creator_uid from feedback f inner join custom_table_value c on (f.feedback_type_id = c.custom_table_value_id) inner join custom_table ct on (c.custom_table_id = ct.custom_table_id) where ct.name = "feedback_reaction" and created_date between :startTime and  now() or last_modified_on between :startTime and now()) fs on (f.creator_uid = fs.creator_uid)  inner join custom_table ct on (c.custom_table_id = ct.custom_table_id) where ct.name = "feedback_reaction" group by f.creator_uid order by last_modified_on');
set job_tracker ['sync_resource_data_dim_resource_cf'] ['column_list'] = utf8('gooru_oid,content_id,user_uid,creator_uid,sharing,last_modified,created_on,title,thumbnail,grade,category,views_count,organization_uid,type_name,last_modified_by_uid,url,is_oer,record_source,license_name,resource_type,endTime,app_key,app_id,resource_format_id,instructional_id,description,resource_format,instructional');
set job_tracker ['sync_resource_data_dim_resource_cf'] ['end_time'] = utf8('2015-08-10 13:14:05.0');
set job_tracker ['sync_resource_data_dim_resource_cf'] ['job_interval'] = long(50000);
set job_tracker ['sync_resource_data_dim_resource_cf'] ['job_name'] = utf8('Sync Resource Data Dim Resource CF');
set job_tracker ['sync_resource_data_dim_resource_cf'] ['key_column'] = utf8('app_id');
set job_tracker ['sync_resource_data_dim_resource_cf'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_resource_data_dim_resource_cf'] ['monitor_job'] = int(1);
set job_tracker ['sync_resource_data_dim_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_resource_data_dim_resource_cf'] ['process_type'] = utf8('content');
set job_tracker ['sync_resource_data_dim_resource_cf'] ['query'] = utf8('SELECT c.gooru_oid, c.content_id, c.user_uid, c.creator_uid, CAST(c.sharing AS CHAR(50)), c.last_modified, c.created_on, r.title, CONCAT("http://repopath/", r.folder, r.thumbnail) as thumbnail, r.grade, r.category, CAST(r.views_total AS SIGNED), c.organization_uid, r.type_name, c.last_updated_user_uid, r.url, r.is_oer, r.record_source, r.license_name, CASE WHEN r.type_name IN("animation/kmz", "animation/swf","exam/pdf","handouts","image/png","ppt/pptx","resource/url","textbook/scribd","video/youtube","gooru/notebook") THEN 1 ELSE CASE WHEN r.type_name IN ("assessment-question") THEN 4 END END as resource_type,c.last_modified AS endTime,CONCAT("GLP") as app_key, CONCAT("GLP~", gooru_oid) as app_id, r.resource_format_id, r.instructional_id,CAST(r.description AS CHAR(6000)) AS description, CASE WHEN r.resource_format_id = 100 THEN "video" ELSE CASE WHEN r.resource_format_id = 101 THEN "audio" ELSE CASE WHEN r.resource_format_id = 102 THEN "webpage" ELSE CASE WHEN r.resource_format_id = 103 THEN "interactive" ELSE CASE WHEN r.resource_format_id = 105 THEN "image" ELSE CASE WHEN r.resource_format_id = 106 THEN "text" END END END END END END AS resource_format, CASE WHEN r.instructional_id = 92 THEN "activity" ELSE CASE WHEN r.instructional_id = 93 THEN "handout" ELSE CASE WHEN r.instructional_id = 94 THEN "homework" ELSE CASE WHEN r.instructional_id = 95 THEN "game" ELSE CASE WHEN r.instructional_id = 96 THEN "presentation" ELSE CASE WHEN r.instructional_id = 97 THEN "reference_material" ELSE CASE WHEN r.instructional_id = 98 THEN "quiz" ELSE CASE WHEN r.instructional_id = 99 THEN "other" ELSE CASE WHEN r.instructional_id = 134 THEN "book" ELSE CASE WHEN r.instructional_id = 135 THEN "curriculum_plan" ELSE CASE WHEN r.instructional_id = 136 THEN "reading" END END END END END END END END END END END AS instructional FROM content c INNER JOIN resource r on r.content_id = c.content_id WHERE c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 30 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['sync_resource_data_dim_resource_cf'] ['running_status'] = int(1);
set job_tracker ['sync_resource_data_dim_resource_cf'] ['status'] = int(0);
set job_tracker ['sync_resource_data_dim_resource_cf'] ['target_columnfamily'] = utf8('dim_resource');
set job_tracker ['migrate_user_collection_item_assoc'] ['column_list'] = utf8('rkey,resource_content_id,collection_content_id,user_uid,collection_item_uid,collection_status,last_modified_on,minimum_score,assignment_completed,time_studying,gooru_oid,endTime');
set job_tracker ['migrate_user_collection_item_assoc'] ['end_time'] = utf8('2015-08-06 02:28:31.0');
set job_tracker ['migrate_user_collection_item_assoc'] ['job_interval'] = long(300000);
set job_tracker ['migrate_user_collection_item_assoc'] ['job_name'] = utf8('User-Collection-Item-Assoc');
set job_tracker ['migrate_user_collection_item_assoc'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_user_collection_item_assoc'] ['modified_on'] = utf8('2015-08-06 13:41:25');
set job_tracker ['migrate_user_collection_item_assoc'] ['monitor_job'] = int(0);
set job_tracker ['migrate_user_collection_item_assoc'] ['owner'] = utf8('user');
set job_tracker ['migrate_user_collection_item_assoc'] ['query'] = utf8('SELECT CONCAT(ca.user_uid,"~",ca.collection_item_uid) AS rkey, ci.resource_content_id, ci.collection_content_id, ca.user_uid, ci.collection_item_id, CASE ca.status WHEN 243 THEN "completed" WHEN 242 THEN "open" END AS collection_status, ca.last_modified_on, ca.minimum_score, ca.assignment_completed, ca.time_studying, c.gooru_oid, ca.last_modified_on AS endTime FROM  user_collection_item_assoc AS ca INNER JOIN collection_item AS ci ON (ca.collection_item_uid = ci.collection_item_id) INNER JOIN content AS c ON (c.content_id = ci.resource_content_id ) WHERE ca.last_modified_on BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY ca.last_modified_on ASC');
set job_tracker ['migrate_user_collection_item_assoc'] ['running_status'] = int(0);
set job_tracker ['migrate_user_collection_item_assoc'] ['start_time'] = utf8('2014-11-12 06:32:09');
set job_tracker ['migrate_user_collection_item_assoc'] ['status'] = int(0);
set job_tracker ['migrate_dim_resource'] ['column_list'] = utf8('gooru_oid,content_id,user_uid,creator_uid,sharing,last_modified,created_on,title,thumbnail,grade,category,views_count,organization_uid,type_name,last_updated_user_uid,url,copied_resource_id,is_oer,record_source,license_name,resource_type,endTime,app_key,app_id,resource_format_id,instructional_id,description,resource_format,instructional');
set job_tracker ['migrate_dim_resource'] ['end_time'] = utf8('2015-08-06 13:38:34.0');
set job_tracker ['migrate_dim_resource'] ['index_limit'] = long(1);
set job_tracker ['migrate_dim_resource'] ['index_on'] = int(1347571524);
set job_tracker ['migrate_dim_resource'] ['job_interval'] = long(30000000);
set job_tracker ['migrate_dim_resource'] ['job_name'] = utf8('Dim-Resource');
set job_tracker ['migrate_dim_resource'] ['key_column'] = utf8('app_id');
set job_tracker ['migrate_dim_resource'] ['modified_on'] = utf8('2015-08-06 13:41:30');
set job_tracker ['migrate_dim_resource'] ['monitor_job'] = int(0);
set job_tracker ['migrate_dim_resource'] ['owner'] = utf8('user');
set job_tracker ['migrate_dim_resource'] ['query'] = utf8('SELECT c.gooru_oid, c.content_id, c.user_uid, c.creator_uid, CAST(c.sharing AS CHAR(50)), c.last_modified, c.created_on, r.title, CONCAT("http://repopath/", r.folder, r.thumbnail) as thumbnail, r.grade, r.category, CAST(r.views_total AS SIGNED), c.organization_uid, r.type_name, c.last_updated_user_uid, r.url, r.copied_resource_id, r.is_oer, r.record_source, r.license_name, CASE WHEN r.type_name IN("animation/kmz", "animation/swf","exam/pdf","handouts","image/png","ppt/pptx","resource/url","textbook/scribd","video/youtube","gooru/notebook") THEN 1  ELSE CASE WHEN r.type_name IN("gooru/classplan", "gooru/classbook","scollection") THEN 2  ELSE CASE WHEN r.type_name IN ("assessment-quiz","assessment-exam") THEN 3  ELSE CASE WHEN r.type_name IN ("qb/question","assessment-question","question") THEN 4  ELSE CASE WHEN  r.type_name = "classpage" THEN 5  ELSE CASE WHEN  r.type_name = "assignment" THEN 6  ELSE CASE WHEN  r.type_name = "folder" THEN 7  ELSE CASE WHEN r.type_name in ("gooru/classplan", "gooru/classbook") THEN 8  ELSE CASE WHEN r.type_name ="scollection" THEN 9 ELSE 10 END END END END END END END END  END as resource_type,c.last_modified AS endTime,CONCAT("GLP") as app_key, CONCAT("GLP~", gooru_oid) as app_id, r.resource_format_id, r.instructional_id,CAST(r.description AS CHAR(6000)) AS description, CASE WHEN r.resource_format_id = 100 THEN "video" ELSE CASE WHEN r.resource_format_id = 101 THEN "audio" ELSE CASE WHEN r.resource_format_id = 102 THEN "webpage" ELSE CASE WHEN r.resource_format_id = 103 THEN "interactive" ELSE CASE WHEN r.resource_format_id = 104 THEN "question" ELSE CASE WHEN r.resource_format_id = 105 THEN "image" ELSE CASE WHEN r.resource_format_id = 106 THEN "text" ELSE CASE WHEN r.resource_format_id = 122 THEN "scollection" ELSE CASE WHEN r.resource_format_id = 123 THEN "gooru_classplan" ELSE CASE WHEN r.resource_format_id = 124 THEN "gooru_classbook" ELSE CASE WHEN r.resource_format_id = 125 THEN "gooru_studyshelf" ELSE CASE WHEN r.resource_format_id = 126 THEN "gooru_notebook" ELSE CASE WHEN r.resource_format_id = 127 THEN "qb_response" ELSE CASE WHEN r.resource_format_id = 128 THEN "qb_question" ELSE CASE WHEN r.resource_format_id = 130 THEN "assessment-exam" ELSE CASE WHEN r.resource_format_id = 131 THEN "classpage" ELSE CASE WHEN r.resource_format_id = 132 THEN "assignment" ELSE CASE WHEN r.resource_format_id = 133 THEN "folder" END END END END END END END END END END END END END END END END END END AS resource_format, CASE WHEN r.instructional_id = 92 THEN "activity" ELSE CASE WHEN r.instructional_id = 93 THEN "handout" ELSE CASE WHEN r.instructional_id = 94 THEN "homework" ELSE CASE WHEN r.instructional_id = 95 THEN "game" ELSE CASE WHEN r.instructional_id = 96 THEN "presentation" ELSE CASE WHEN r.instructional_id = 97 THEN "reference_material" ELSE CASE WHEN r.instructional_id = 98 THEN "quiz" ELSE CASE WHEN r.instructional_id = 99 THEN "other" ELSE CASE WHEN r.instructional_id = 134 THEN "book" ELSE CASE WHEN r.instructional_id = 135 THEN "curriculum_plan" ELSE CASE WHEN r.instructional_id = 136 THEN "reading" END END END END END END END END END END END AS instructional FROM content c INNER JOIN resource r on r.content_id = c.content_id WHERE c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 30 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['migrate_dim_resource'] ['running_status'] = int(0);
set job_tracker ['migrate_dim_resource'] ['start_time'] = utf8('2014-11-13 07:20:17');
set job_tracker ['migrate_dim_resource'] ['status'] = int(0);
set job_tracker ['sync_collection_copied_count'] ['column_list'] = utf8('rkey,count~copy,endTime');
set job_tracker ['sync_collection_copied_count'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['sync_collection_copied_count'] ['index_on'] = utf8('MicroAggregator');
set job_tracker ['sync_collection_copied_count'] ['job_interval'] = long(50000);
set job_tracker ['sync_collection_copied_count'] ['job_name'] = utf8('Collection Copy Count');
set job_tracker ['sync_collection_copied_count'] ['key_column'] = int(1919640953);
set job_tracker ['sync_collection_copied_count'] ['modified_on'] = utf8('2015-08-10 13:14:30');
set job_tracker ['sync_collection_copied_count'] ['monitor_job'] = int(1);
set job_tracker ['sync_collection_copied_count'] ['owner'] = utf8('user');
set job_tracker ['sync_collection_copied_count'] ['process_type'] = utf8('content');
set job_tracker ['sync_collection_copied_count'] ['query'] = utf8('SELECT CONCAT("all~", cl.copied_collection_id) AS rkey, COUNT(cl.copied_collection_id) AS copied_count, CAST(cl1.last_modified AS CHAR) AS endTime FROM collection cl INNER JOIN (SELECT cl.copied_collection_id, MAX(c.last_modified) AS last_modified FROM content c INNER JOIN collection cl ON (c.content_id = cl.content_id) WHERE cl.collection_type IN ("collection", "assessment", "quiz", "folder", "assessment/url") AND cl.copied_collection_id IS NOT NULL AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() GROUP BY cl.copied_collection_id) cl1 ON (cl.copied_collection_id = cl1.copied_collection_id) GROUP BY cl.copied_collection_id ORDER BY cl1.last_modified ASC');
set job_tracker ['sync_collection_copied_count'] ['running_status'] = int(1);
set job_tracker ['sync_collection_copied_count'] ['status'] = int(1);
set job_tracker ['sync_collection_copied_count'] ['target_columnfamily'] = utf8('live_dashboard');
set job_tracker ['migrate_all_collection_distribution'] ['column_list'] = utf8('gooru_oid,content_id,item_count,resource_count,question_count,video_count,audio_count,webpage_count,interactive_count,image_count,text_count,qb_response_count,qb_question_count,assessment-exam_count,assignment_count,folder_count,scollection_count,classpage_count,mc_count,sa_count,tf_count,fib_count,mtf_count,oe_count,ma_count');
set job_tracker ['migrate_all_collection_distribution'] ['job_name'] = utf8('Collection-Distribution-All');
set job_tracker ['migrate_all_collection_distribution'] ['key_column'] = utf8('gooru_oid');
set job_tracker ['migrate_all_collection_distribution'] ['max_allowed_content'] = long(3617853092587319344);
set job_tracker ['migrate_all_collection_distribution'] ['modified_on'] = utf8('2014-12-16 04:19:56');
set job_tracker ['migrate_all_collection_distribution'] ['owner'] = utf8('user');
set job_tracker ['migrate_all_collection_distribution'] ['query'] = utf8('SELECT c.gooru_oid, c.content_id, SUM(CASE WHEN c.content_id > 0 THEN 1 ELSE 0 END) AS item_count, SUM(CASE WHEN r.resource_format_id <> 104 THEN 1 ELSE 0 END) AS resource_count, SUM(CASE WHEN r.resource_format_id = 104 THEN 1 ELSE 0 END) AS question_count, SUM(CASE WHEN r.resource_format_id = 100 THEN 1 ELSE 0 END) AS video_count, SUM(CASE WHEN r.resource_format_id = 101 THEN 1 ELSE 0 END) AS audio_count, SUM(CASE WHEN r.resource_format_id = 102 THEN 1 ELSE 0 END) AS webpage_count, SUM(CASE WHEN r.resource_format_id = 103 THEN 1 ELSE 0 END) AS interactive_count, SUM(CASE WHEN r.resource_format_id = 105 THEN 1 ELSE 0 END) AS image_count, SUM(CASE WHEN r.resource_format_id = 106 THEN 1 ELSE 0 END) AS text_count, SUM(CASE WHEN r.resource_format_id = 127 THEN 1 ELSE 0 END) AS qb_response_count, SUM(CASE WHEN r.resource_format_id = 128 THEN 1 ELSE 0 END) AS qb_question_count, SUM(CASE WHEN r.resource_format_id = 130 THEN 1 ELSE 0 END) AS "assessment-exam_count", SUM(CASE WHEN r.resource_format_id = 132 THEN 1 ELSE 0 END) AS assignment_count, SUM(CASE WHEN r.resource_format_id = 133 THEN 1 ELSE 0 END) AS folder_count, SUM(CASE WHEN r.resource_format_id = 122 THEN 1 ELSE 0 END) AS scollection_count, SUM(CASE WHEN r.resource_format_id = 131 THEN 1 ELSE 0 END) AS classpage_count, SUM(CASE WHEN aq.type = 1 THEN 1 ELSE 0 END) AS mc_count, SUM(CASE WHEN aq.type = 2 THEN 1 ELSE 0 END) AS sa_count, SUM(CASE WHEN aq.type = 3 THEN 1 ELSE 0 END) AS tf_count, SUM(CASE WHEN aq.type = 4 THEN 1 ELSE 0 END) AS fib_count, SUM(CASE WHEN aq.type = 5 THEN 1 ELSE 0 END) AS mtf_count, SUM(CASE WHEN aq.type = 6 THEN 1 ELSE 0 END) AS oe_count, SUM(CASE WHEN aq.type = 7 THEN 1 ELSE 0 END) AS ma_count, CAST(c.last_modified AS CHAR(100)) AS endTime  FROM content c INNER JOIN collection_item ci ON (c.content_id = ci.collection_content_id) INNER JOIN resource r on (ci.resource_content_id = r.content_id) LEFT JOIN assessment_question aq ON (r.content_id = aq.question_id) WHERE  c.content_id BETWEEN :startValue AND :endValue group by c.content_id');
set job_tracker ['migrate_collection_distribution'] ['column_list'] = utf8('gooru_oid,content_id,item_count,resourceCount,questionCount,video_count,audio_count,webpage_count,interactive_count,image_count,text_count,qb_response_count,qb_question_count,mc_count,sa_count,tf_count,fib_count,mtf_count,oe_count,ma_count,ht_hl_count,ht_ro_count,hs_txt_count,hs_img_count,endTime');
set job_tracker ['migrate_collection_distribution'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['migrate_collection_distribution'] ['job_interval'] = long(50000);
set job_tracker ['migrate_collection_distribution'] ['job_name'] = utf8('Collection_distribution');
set job_tracker ['migrate_collection_distribution'] ['key_column'] = utf8('gooru_oid');
set job_tracker ['migrate_collection_distribution'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['migrate_collection_distribution'] ['monitor_job'] = int(1);
set job_tracker ['migrate_collection_distribution'] ['owner'] = utf8('user');
set job_tracker ['migrate_collection_distribution'] ['process_type'] = utf8('content');
set job_tracker ['migrate_collection_distribution'] ['query'] = utf8('SELECT c.gooru_oid, c.content_id, IFNULL(SUM(CASE WHEN r.content_id > 0 THEN 1 ELSE 0 END), 0) AS item_count, IFNULL(SUM(CASE WHEN r.resource_format_id <> 104 THEN 1 ELSE 0 END), 0) AS resource_count, IFNULL(SUM(CASE WHEN r.resource_format_id = 104 THEN 1 ELSE 0 END), 0) AS question_count, IFNULL(SUM(CASE WHEN r.resource_format_id = 100 THEN 1 ELSE 0 END), 0) AS video_count, IFNULL(SUM(CASE WHEN r.resource_format_id = 101 THEN 1 ELSE 0 END), 0) AS audio_count, IFNULL(SUM(CASE WHEN r.resource_format_id = 102 THEN 1 ELSE 0 END), 0) AS webpage_count, IFNULL(SUM(CASE WHEN r.resource_format_id = 103 THEN 1 ELSE 0 END), 0) AS interactive_count, IFNULL(SUM(CASE WHEN r.resource_format_id = 105 THEN 1 ELSE 0 END), 0) AS image_count, IFNULL(SUM(CASE WHEN r.resource_format_id = 106 THEN 1 ELSE 0 END), 0) AS text_count, IFNULL(SUM(CASE WHEN r.resource_format_id = 127 THEN 1 ELSE 0 END), 0) AS qb_response_count, IFNULL(SUM(CASE WHEN r.resource_format_id = 128 THEN 1 ELSE 0 END), 0) AS qb_question_count, IFNULL(SUM(CASE WHEN aq.type = 1 THEN 1 ELSE 0 END), 0) AS mc_count, IFNULL(SUM(CASE WHEN aq.type = 2 THEN 1 ELSE 0 END), 0) AS sa_count, IFNULL(SUM(CASE WHEN aq.type = 3 THEN 1 ELSE 0 END), 0) AS tf_count, IFNULL(SUM(CASE WHEN aq.type = 4 THEN 1 ELSE 0 END), 0) AS fib_count, IFNULL(SUM(CASE WHEN aq.type = 5 THEN 1 ELSE 0 END), 0) AS mtf_count, IFNULL(SUM(CASE WHEN aq.type = 6 THEN 1 ELSE 0 END), 0) AS oe_count, IFNULL(SUM(CASE WHEN aq.type = 7 THEN 1 ELSE 0 END), 0) AS ma_count, IFNULL(SUM(CASE WHEN aq.type = 8 THEN 1 ELSE 0 END), 0) AS ht_hl_count, IFNULL(SUM(CASE WHEN aq.type = 9 THEN 1 ELSE 0 END), 0) AS ht_ro_count, IFNULL(SUM(CASE WHEN aq.type = 10 THEN 1 ELSE 0 END), 0) AS hs_txt_count, IFNULL(SUM(CASE WHEN aq.type = 11 THEN 1 ELSE 0 END), 0) AS hs_img_count, CAST(c.last_modified AS CHAR(100)) AS endTime FROM content c INNER JOIN collection col ON (c.content_id = col.content_id) LEFT JOIN collection_item ci ON (col.content_id = ci.collection_content_id) LEFT JOIN resource r on (ci.resource_content_id = r.content_id) LEFT JOIN assessment_question aq ON (r.content_id = aq.question_id) WHERE col.collection_type IN ("collection", "assessment", "quiz") AND c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() group by ci.collection_content_id ORDER BY c.last_modified ASC');
set job_tracker ['migrate_collection_distribution'] ['running_status'] = int(1);
set job_tracker ['migrate_collection_distribution'] ['start_time'] = utf8('2014-11-12 06:32:09');
set job_tracker ['migrate_collection_distribution'] ['status'] = int(0);
set job_tracker ['migrate_collection_distribution'] ['target_columnfamily'] = utf8('content_meta');
set job_tracker ['sync_user_rating_count'] ['column_list'] = utf8('rkey,count~ratings,count~1,count~2,count~3,count~4,count~5,sum~rate,endTime');
set job_tracker ['sync_user_rating_count'] ['end_time'] = utf8('2014-12-31 00:01:03');
set job_tracker ['sync_user_rating_count'] ['job_name'] = utf8('User-Ratings-Count');
set job_tracker ['sync_user_rating_count'] ['key_column'] = int(1919640953);
set job_tracker ['sync_user_rating_count'] ['modified_on'] = utf8('2015-01-02 09:59:15');
set job_tracker ['sync_user_rating_count'] ['owner'] = utf8('user');
set job_tracker ['sync_user_rating_count'] ['query'] = utf8('select CONCAT("all~", f.creator_uid) AS creator_uid, count(1) as "count~ratings", COUNT(CASE WHEN f.score = 1 THEN f.creator_uid END) AS "count~1", COUNT(CASE WHEN f.score = 2 THEN f.creator_uid END) AS "count~2", COUNT(CASE WHEN f.score = 3 THEN f.creator_uid END) AS "count~3", COUNT(CASE WHEN f.score = 4 THEN f.creator_uid END) AS "count~4", COUNT(CASE WHEN f.score = 5 THEN f.creator_uid END) AS "count~5",sum(f.score) as "sum~rate",CAST(last_modified_on AS CHAR(60)) as endTime from feedback f inner join custom_table_value c on (f.feedback_type_id = c.custom_table_value_id) inner join (SELECT distinct creator_uid from feedback f inner join custom_table_value c on (f.feedback_type_id = c.custom_table_value_id) inner join custom_table ct on (c.custom_table_id = ct.custom_table_id) where ct.name = "feedback_rating_type" and c.value = "star" and created_date between :startTime and  now() or last_modified_on between :startTime and now()) fs on (f.creator_uid = fs.creator_uid) inner join custom_table ct on (c.custom_table_id = ct.custom_table_id) where ct.name = "feedback_rating_type" and c.value = "star" group by f.creator_uid order by last_modified_on');
set job_tracker ['sync-collection-copied-count'] ['column_list'] = utf8('rkey,count~copy,endTime');
set job_tracker ['sync-collection-copied-count'] ['end_time'] = utf8('2015-08-06 12:57:21');
set job_tracker ['sync-collection-copied-count'] ['job_interval'] = long(300000);
set job_tracker ['sync-collection-copied-count'] ['job_name'] = utf8('Collection-Copied-Count-Sync');
set job_tracker ['sync-collection-copied-count'] ['key_column'] = int(1919640953);
set job_tracker ['sync-collection-copied-count'] ['modified_on'] = utf8('2015-08-06 13:41:25');
set job_tracker ['sync-collection-copied-count'] ['monitor_job'] = int(0);
set job_tracker ['sync-collection-copied-count'] ['owner'] = utf8('user');
set job_tracker ['sync-collection-copied-count'] ['query'] = utf8('select concat("all~", r.copied_resource_id) as rkey, count(r.copied_resource_id) as copied_count, CAST(max(r1.last_modified) AS CHAR(55)) as endTime from resource r inner join (select r.copied_resource_id, max(c.last_modified) as last_modified from content c inner join resource r on (c.content_id = r.content_id) where r.type_name in ("scollection","folder") and c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() group by r.copied_resource_id) r1 on (r.copied_resource_id = r1.copied_resource_id) group by r.copied_resource_id order by r1.last_modified ASC;');
set job_tracker ['sync-collection-copied-count'] ['running_status'] = int(0);
set job_tracker ['sync-collection-copied-count'] ['status'] = int(0);
set job_tracker ['sync_resource_data_resource_cf'] ['column_list'] = utf8('gooruOId,indexType,version,title,description,url,contentId,distinguish,resourceSourceId,thumbnail,folder,resourceType,typeEscaped,category,mediaType,recordSource,sharing,lastModified,createdOn,grade,frameBreaker,statistics.statusIsBroken,assetURI,batchId,lastUpdatedUserUid,isOer,versionUid,clusterUid,isCanonical,depthOfknowledge,momentsofLearning,educationalUse,licenseString,resourceFormat,instructional,ownerString,creatorString,resourceSourceString,organization.partyUid,endTime');
set job_tracker ['sync_resource_data_resource_cf'] ['end_time'] = utf8('2015-08-10 13:05:18.0');
set job_tracker ['sync_resource_data_resource_cf'] ['index_datasource'] = utf8('content_index');
set job_tracker ['sync_resource_data_resource_cf'] ['index_flag'] = int(1);
set job_tracker ['sync_resource_data_resource_cf'] ['job_interval'] = long(50000);
set job_tracker ['sync_resource_data_resource_cf'] ['job_name'] = utf8('Sync Resource Data Resource CF');
set job_tracker ['sync_resource_data_resource_cf'] ['key_column'] = long(7453298445706545508);
set job_tracker ['sync_resource_data_resource_cf'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_resource_data_resource_cf'] ['monitor_job'] = int(1);
set job_tracker ['sync_resource_data_resource_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_resource_data_resource_cf'] ['process_type'] = utf8('content');
set job_tracker ['sync_resource_data_resource_cf'] ['query'] = utf8('select c.gooru_oid, "resource" as index_type, c.version, r.title as title, CAST(r.description AS CHAR), r.url as url, c.content_id, r.distinguish, r.resource_source_id, r.thumbnail, r.folder, r.type_name, (replace(replace(r.type_name, "-",""),"/","")) as typeEscaped, r.category as category, r.media_type, r.record_source, c.sharing, c.last_modified, c.created_on, r.grade as grade, CASE WHEN r.has_frame_breaker = 1 THEN 1 else 0 END AS has_frame_breaker, CASE WHEN r.broken_status = 1 THEN 1 else 0 END AS broken_status, "http://repopath/" as assetURI,r.batch_id, c.last_updated_user_uid, CASE WHEN r.is_oer = 1 THEN 1 ELSE 0 END as is_oer, UUID() as versionUid,r.cluster_uid, CASE WHEN is_representative = 0 THEN 0 ELSE 1 END as is_representative, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (201,202,203,204)) as depthOfknowledge, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (235,211,234)) as momentsofLearning, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type = ctv.custom_table_value_id where content_id = r.content_id and association_type in (217,229,231,223,225,219,222,230,227,218,226,224,228,216,221)) as educationalUse,(select CONCAT(IFNULL(name,"null"),"~~", IFNULL(url,"null"),"~~", IFNULL(code,"null"),"~~", IFNULL(tag,"null"),"~~", IFNULL(icon,"null"),"~~", IFNULL(definition,"null")) from license where name = r.license_name) as licenseString, (select value from custom_table_value where custom_table_value_id = r.resource_format_id) as resourceFormat, (select value from custom_table_value where custom_table_value_id = r.instructional_id) as instructional, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.user_uid and optional_key = "show_profile_page") as ownerString, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.creator_uid and optional_key = "show_profile_page") as creatorString, (select CONCAT(IFNULL(attribution,"null"),"~~",IFNULL(domain_name,"null"),"~~",IFNULL(active_status,"null"),"~~",IFNULL(type,"null")) from resource_source where resource_source_id = r.resource_source_id) as resourceSourceString, c.organization_uid,c.last_modified as endTime from resource r inner join content c on c.content_id = r.content_id where r.type_name in ("animation/kmz","animation/swf","exam/pdf","handouts","image/png","ppt/pptx","resource/url","textbook/scribd","video/youtube","vimeo/video") and c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 5 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['sync_resource_data_resource_cf'] ['running_status'] = int(1);
set job_tracker ['sync_resource_data_resource_cf'] ['status'] = int(0);
set job_tracker ['sync_resource_data_resource_cf'] ['target_columnfamily'] = long(8243121615520555877);
set job_tracker ['prepare_anonymous_data'] ['column_list'] = long(8463219666661501284);
set job_tracker ['prepare_anonymous_data'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['prepare_anonymous_data'] ['job_name'] = utf8('Prepare Anonymous User');
set job_tracker ['prepare_anonymous_data'] ['key_column'] = long(8463219666661501284);
set job_tracker ['prepare_anonymous_data'] ['modified_on'] = utf8('2015-04-14 11:45:58');
set job_tracker ['prepare_anonymous_data'] ['monitor_job'] = int(1);
set job_tracker ['prepare_anonymous_data'] ['owner'] = utf8('user');
set job_tracker ['prepare_anonymous_data'] ['query'] = utf8('SELECT user_uid,registered_on FROM identity WHERE registered_on BETWEEN :startValue AND :endValue');
set job_tracker ['prepare_anonymous_data'] ['running_status'] = int(1);
set job_tracker ['prepare_anonymous_data'] ['start_time'] = utf8('2014-11-12 06:32:09');
set job_tracker ['prepare_anonymous_data'] ['status'] = int(1);
set job_tracker ['sync_question_count'] ['column_list'] = utf8('gooru_oid,collection_Content_id,mcCount,oeCount,fibCount,maCount,hthlCount,htroCount,hstxtCount,hsimgCount,questionCount,resourceCount,endTime');
set job_tracker ['sync_question_count'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['sync_question_count'] ['job_interval'] = long(50000);
set job_tracker ['sync_question_count'] ['job_name'] = utf8('Question Count - Version 1');
set job_tracker ['sync_question_count'] ['key_column'] = utf8('gooru_oid');
set job_tracker ['sync_question_count'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_question_count'] ['monitor_job'] = int(1);
set job_tracker ['sync_question_count'] ['owner'] = utf8('user');
set job_tracker ['sync_question_count'] ['process_type'] = utf8('content');
set job_tracker ['sync_question_count'] ['query'] = utf8('SELECT c.gooru_oid,ci.collection_content_id AS collection_Content_id,COUNT(CASE WHEN aq.type in (1,3) THEN ci.resource_content_id END) AS mcCount,COUNT(CASE WHEN aq.type =6 THEN ci.resource_content_id END) AS oeCount,COUNT(CASE WHEN aq.type =4 THEN ci.resource_content_id END) AS fibCount,COUNT(CASE WHEN aq.type =7 THEN ci.resource_content_id END) AS maCount,COUNT(CASE WHEN aq.type =8 THEN ci.resource_content_id END) AS hthlCount,COUNT(CASE WHEN aq.type =9 THEN ci.resource_content_id END) AS htroCount,COUNT(CASE WHEN aq.type =10 THEN ci.resource_content_id END) AS hsCount,COUNT(CASE WHEN aq.type =11 THEN ci.resource_content_id END) AS hsimgCount,COUNT(CASE WHEN aq.question_id > 0 THEN aq.question_id END) AS questionCount, COUNT(ci.resource_content_id) AS resourceCount,CAST(c.last_modified AS CHAR(100)) AS endTime FROM collection_item AS ci INNER JOIN content AS c ON (ci.collection_content_id = c.content_id) LEFT JOIN assessment_question AS aq ON (aq.question_id = ci.resource_content_id) WHERE c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() group by ci.collection_content_id ORDER BY c.last_modified ASC');
set job_tracker ['sync_question_count'] ['running_status'] = int(1);
set job_tracker ['sync_question_count'] ['status'] = int(0);
set job_tracker ['sync_question_count'] ['target_columnfamily'] = utf8('question_count');
set job_tracker ['monitor~kafka~aggregator~consumer'] ['mail_loop_count'] = int(5);
set job_tracker ['monitor~kafka~aggregator~consumer'] ['status'] = int(1);
set job_tracker ['monitor~kafka~aggregator~consumer'] ['thread_loop_count'] = int(20);
set job_tracker ['monitor~kafka~aggregator~consumer'] ['thread_sleep_time'] = long(50000);
set job_tracker ['sync_classdata_with_class_cf'] ['column_list'] = utf8('class_uid,title,description,image_path,course_gooru_oid,course_content_id,minimum_score,visibility,user_group_type,member_count,organization_uid,creator_uid,endTime');
set job_tracker ['sync_classdata_with_class_cf'] ['end_time'] = utf8('2015-08-10 12:53:39');
set job_tracker ['sync_classdata_with_class_cf'] ['index_datasource'] = utf8('content_index');
set job_tracker ['sync_classdata_with_class_cf'] ['job_interval'] = long(50000);
set job_tracker ['sync_classdata_with_class_cf'] ['job_name'] = utf8('Sync Class With Class CF');
set job_tracker ['sync_classdata_with_class_cf'] ['key_column'] = utf8('class_uid');
set job_tracker ['sync_classdata_with_class_cf'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_classdata_with_class_cf'] ['monitor_job'] = int(1);
set job_tracker ['sync_classdata_with_class_cf'] ['owner'] = utf8('user');
set job_tracker ['sync_classdata_with_class_cf'] ['process_type'] = utf8('content');
set job_tracker ['sync_classdata_with_class_cf'] ['query'] = utf8('SELECT c.class_uid, ug.name, c.description, c.image_path, cn.gooru_oid, c.course_content_id, CAST(c.minimum_score AS UNSIGNED) AS minimumScore, CAST(c.visibility AS UNSIGNED) AS visibility, ug.user_group_type, ug.member_count, ug.organization_uid,CAST(p.created_by_uid AS CHAR) AS creator_uid,CAST(p.last_modified_on AS CHAR) AS endTime FROM class c INNER JOIN user_group ug ON (c.class_uid = ug.user_group_uid) LEFT JOIN party p ON (p.party_uid = ug.user_group_uid) LEFT JOIN content cn ON (cn.content_id = c.course_content_id) WHERE p.last_modified_on BETWEEN DATE_SUB(:startTime, INTERVAL 20 SECOND) AND NOW() ORDER BY p.last_modified_on ASC');
set job_tracker ['sync_classdata_with_class_cf'] ['running_status'] = int(1);
set job_tracker ['sync_classdata_with_class_cf'] ['status'] = int(0);
set job_tracker ['sync_classdata_with_class_cf'] ['target_columnfamily'] = utf8('class');
set job_tracker ['sync_user_group_assoc_delete'] ['column_list'] = utf8('gooruOId,endTime');
set job_tracker ['sync_user_group_assoc_delete'] ['end_time'] = utf8('2015-08-10 12:53:39');
set job_tracker ['sync_user_group_assoc_delete'] ['job_interval'] = long(50000);
set job_tracker ['sync_user_group_assoc_delete'] ['job_name'] = utf8('Sync Delete User Group Assoc Data');
set job_tracker ['sync_user_group_assoc_delete'] ['key_column'] = long(7453298445706545508);
set job_tracker ['sync_user_group_assoc_delete'] ['modified_on'] = utf8('2015-08-10 13:14:40');
set job_tracker ['sync_user_group_assoc_delete'] ['monitor_job'] = int(1);
set job_tracker ['sync_user_group_assoc_delete'] ['owner'] = utf8('user');
set job_tracker ['sync_user_group_assoc_delete'] ['process_type'] = utf8('delete-assoc');
set job_tracker ['sync_user_group_assoc_delete'] ['query'] = utf8('SELECT CAST(c.class_uid AS CHAR) AS class_uid,CAST(p.last_modified_on AS CHAR) AS last_modified_on FROM class c INNER JOIN party p ON(c.class_uid=p.party_uid) WHERE p.last_modified_on BETWEEN DATE_SUB(:startTime, INTERVAL 5 SECOND) AND NOW() ORDER BY p.last_modified_on ASC');
set job_tracker ['sync_user_group_assoc_delete'] ['running_status'] = int(1);
set job_tracker ['sync_user_group_assoc_delete'] ['status'] = int(0);
set job_tracker ['sync_user_group_assoc_delete'] ['target_columnfamily'] = utf8('user_group_association');
set job_tracker ['migrate_collection'] ['column_list'] = utf8('rkey,gooru_oid,content_id,collection_type,goals,questions,ideas,performance_tasks,language,grade,key_points,notes,language_objective,network,mail_notification,build_type_id,narration_link,estimated_time,endTime,errorData');
set job_tracker ['migrate_collection'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['migrate_collection'] ['job_interval'] = long(50000);
set job_tracker ['migrate_collection'] ['job_name'] = utf8('Collection');
set job_tracker ['migrate_collection'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_collection'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['migrate_collection'] ['monitor_job'] = int(1);
set job_tracker ['migrate_collection'] ['owner'] = utf8('user');
set job_tracker ['migrate_collection'] ['process_type'] = utf8('content');
set job_tracker ['migrate_collection'] ['query'] = utf8('SELECT ci.gooru_oid AS rkey,ci.gooru_oid AS gooru_oid,c.content_id,c.collection_type,CAST(c.goals AS CHAR(3000)) as goals,c.questions,c.ideas,c.performance_tasks,c.language,c.grade,CAST(c.key_points AS CHAR(3000)) as key_points,CAST(c.notes AS CHAR(3000)) as notes,CAST(c.language_objective as CHAR(3000)) as language_objective,c.network,c.mail_notification,c.build_type_id,c.narration_link,c.estimated_time,CAST(ci.last_modified as CHAR(100)) AS endTime,1 AS errorData FROM collection AS c INNER JOIN content AS ci ON (ci.content_id = c.content_id) WHERE ci.is_deleted = 0 AND ci.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY ci.last_modified ASC');
set job_tracker ['migrate_collection'] ['running_status'] = int(1);
set job_tracker ['migrate_collection'] ['start_time'] = utf8('2014-11-06 07:10:51.0');
set job_tracker ['migrate_collection'] ['status'] = int(0);
set job_tracker ['migrate_collection'] ['target_columnfamily'] = utf8('collection');
set job_tracker ['migrate_all_dim_content_classification'] ['column_list'] = utf8('rkey,code_id,content_id,depth,gooru_oid,label,root_node_id,endTime');
set job_tracker ['migrate_all_dim_content_classification'] ['job_name'] = utf8('Dim-Content-Classification-All');
set job_tracker ['migrate_all_dim_content_classification'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_all_dim_content_classification'] ['max_allowed_content'] = long(3617853092587319344);
set job_tracker ['migrate_all_dim_content_classification'] ['modified_on'] = utf8('2014-12-16 04:19:56');
set job_tracker ['migrate_all_dim_content_classification'] ['owner'] = utf8('user');
set job_tracker ['migrate_all_dim_content_classification'] ['query'] = utf8('SELECT CAST(CONCAT("GLP~",c.gooru_oid,"~",cc.code_id,"~",co.depth) AS Char(150)) AS rkey,cc.code_id, c.content_id,CAST(co.depth AS UNSIGNED) AS depth,c.gooru_oid,co.label,co.root_node_id, CAST(c.last_modified AS CHAR(50)) AS endTime FROM content AS c INNER JOIN content_classification AS cc ON (c.content_id = cc.content_id) INNER JOIN code AS co ON (co.code_id =cc.code_id) WHERE  c.content_id BETWEEN :startValue AND :endValue');
set job_tracker ['migrate_user'] ['column_list'] = utf8('rkey,user_role,gooru_uid,firstname,lastname,username,role_id,account_uid,security_group_uid,register_token,confirm_status,license_version,mail_status,added_by_system,import_code,parent_id,parent_uid,account_type_id,organization_uid,user_group_uid,primary_organization_uid,view_flag,is_deleted,reference_uid,identity_id,idp_id,active,registered_on,deactivated_on,external_id,last_login,account_created_type,login_type,email_sso,endTime');
set job_tracker ['migrate_user'] ['end_time'] = utf8('2015-08-10 13:14:10.0');
set job_tracker ['migrate_user'] ['job_interval'] = long(50000);
set job_tracker ['migrate_user'] ['job_name'] = int(1433625970);
set job_tracker ['migrate_user'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_user'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['migrate_user'] ['monitor_job'] = int(1);
set job_tracker ['migrate_user'] ['owner'] = utf8('user');
set job_tracker ['migrate_user'] ['process_type'] = utf8('content');
set job_tracker ['migrate_user'] ['query'] = utf8('SELECT u.gooru_uid AS rkey, group_concat(ur.name) as user_role, u.gooru_uid, u.firstname, u.lastname, u.username, CAST(u.role_id AS UNSIGNED) AS role_id, u.account_uid, u.security_group_uid, u.register_token, CAST(u.confirm_status AS UNSIGNED) AS confirm_status, u.license_version, u.mail_status, CAST(u.added_by_system AS UNSIGNED) AS added_by_system, u.import_code, u.parent_id, u.parent_uid, CAST(u.account_type_id AS UNSIGNED) AS account_type_id, u.organization_uid, u.user_group_uid, u.primary_organization_uid, CAST(u.view_flag AS UNSIGNED) AS view_flag, CAST(u.is_deleted AS UNSIGNED) AS is_deleted, u.reference_uid, i.identity_id, i.idp_id, CAST(i.active AS UNSIGNED) AS active, i.registered_on, i.deactivated_on, i.external_id, i.last_login, i.account_created_type, i.login_type, i.email_sso, i.last_login as endTime FROM user AS u INNER JOIN identity AS i ON (u.gooru_uid = i.user_uid) INNER JOIN user_role_assoc ura ON (ura.user_uid = i.user_uid) INNER JOIN user_role ur ON (ur.role_id = ura.role_id) WHERE i.last_login BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() group by u.gooru_uid ORDER BY i.last_login ASC');
set job_tracker ['migrate_user'] ['running_status'] = int(1);
set job_tracker ['migrate_user'] ['start_time'] = utf8('2014-11-12 06:32:09');
set job_tracker ['migrate_user'] ['status'] = int(0);
set job_tracker ['migrate_user'] ['target_columnfamily'] = long(7235434533107230066);
set job_tracker ['migrate_dim_content_classification'] ['column_list'] = utf8('rkey,code_id,content_id,depth,gooru_oid,label,root_node_id,endTime');
set job_tracker ['migrate_dim_content_classification'] ['end_time'] = utf8('2015-08-10 13:14:05');
set job_tracker ['migrate_dim_content_classification'] ['job_interval'] = long(50000);
set job_tracker ['migrate_dim_content_classification'] ['job_name'] = utf8('Dim-Content-Classification');
set job_tracker ['migrate_dim_content_classification'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_dim_content_classification'] ['modified_on'] = utf8('2015-08-10 13:14:31');
set job_tracker ['migrate_dim_content_classification'] ['monitor_job'] = int(1);
set job_tracker ['migrate_dim_content_classification'] ['owner'] = utf8('user');
set job_tracker ['migrate_dim_content_classification'] ['process_type'] = utf8('content');
set job_tracker ['migrate_dim_content_classification'] ['query'] = utf8('SELECT CONCAT("GLP~",c.gooru_oid,"~",cc.code_id,"~",co.depth) AS rkey,cc.code_id, c.content_id,co.depth,c.gooru_oid,co.label,co.root_node_id,CAST(c.last_modified AS CHAR(50)) AS endTime FROM content AS c INNER JOIN content_classification AS cc ON (c.content_id = cc.content_id) INNER JOIN code AS co ON (co.code_id =cc.code_id) WHERE  c.last_modified BETWEEN  DATE_SUB(:startTime, INTERVAL 30 SECOND) AND DATE_ADD(:startTime, INTERVAL 1 DAY) ORDER BY c.last_modified ASC');
set job_tracker ['migrate_dim_content_classification'] ['running_status'] = int(1);
set job_tracker ['migrate_dim_content_classification'] ['start_time'] = utf8('2014-11-11 01:21:03');
set job_tracker ['migrate_dim_content_classification'] ['status'] = int(0);
set job_tracker ['migrate_dim_content_classification'] ['target_columnfamily'] = utf8('dim_content_classification');
set job_tracker ['migrate_dim_resource_format_all'] ['column_list'] = utf8('rkey,resource_format_id,resource_format');
set job_tracker ['migrate_dim_resource_format_all'] ['job_name'] = utf8('Dim-Resource-Fromat-All');
set job_tracker ['migrate_dim_resource_format_all'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_dim_resource_format_all'] ['max_allowed_content'] = long(3617860780578387251);
set job_tracker ['migrate_dim_resource_format_all'] ['owner'] = utf8('user');
set job_tracker ['migrate_dim_resource_format_all'] ['query'] = utf8('select CONCAT("GLP~", gooru_oid) as rkey, resource_format_id, CAST(ctv.value AS CHAR(100)) AS resource_format from content c inner join resource r on (r.content_id = c.content_id) inner join custom_table_value ctv on (r.resource_format_id = ctv.custom_table_value_id) where r.resource_format_id is not null AND c.content_id BETWEEN :startValue AND :endValue');
set job_tracker ['prod_esource_sync_job_test'] ['column_list'] = utf8('gooruOId,indexType,version,title,description,url,contentId,distinguish,resourceSourceId,thumbnail,folder,resourceType,typeEscaped,category,mediaType,recordSource,sharing,lastModified,createdOn,grade,frameBreaker,statistics.statusIsBroken,assetURI,batchId,lastUpdatedUserUid,isOer,versionUid,clusterUid,isCanonical,resourceTypeN,depthOfknowledge,momentsofLearning,educationalUse,licenseString,resourceFormat,instructional,ownerString,creatorString,resourceSourceString,organization.partyUid');
set job_tracker ['prod_esource_sync_job_test'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['prod_esource_sync_job_test'] ['job_interval'] = long(300000);
set job_tracker ['prod_esource_sync_job_test'] ['job_name'] = utf8('sync-prod-resource-new');
set job_tracker ['prod_esource_sync_job_test'] ['key_column'] = long(7453298445706545508);
set job_tracker ['prod_esource_sync_job_test'] ['modified_on'] = utf8('2015-03-19 12:19:07');
set job_tracker ['prod_esource_sync_job_test'] ['monitor_job'] = int(0);
set job_tracker ['prod_esource_sync_job_test'] ['owner'] = utf8('user');
set job_tracker ['prod_esource_sync_job_test'] ['query'] = utf8('select c.gooru_oid, "resource" as index_type, c.version, r.title as title, r.description, r.url as url, c.content_id, r.distinguish, r.resource_source_id, r.thumbnail, r.folder, r.type_name, (replace(replace(r.type_name, "-",""),"/","")) as typeEscaped, r.category as category, r.media_type, r.record_source, c.sharing, c.last_modified, c.created_on, r.grade as grade, CASE WHEN r.has_frame_breaker = 1 THEN 1 else 0 END AS has_frame_breaker, CASE WHEN r.broken_status = 1 THEN 1 else 0 END AS broken_status, "http://repopath/" as assetURI,r.batch_id, c.last_updated_user_uid, CASE WHEN r.is_oer = 1 THEN 1 ELSE 0 END as is_oer, UUID() as versionUid,r.cluster_uid,  CASE WHEN is_representative = 0 THEN 0 ELSE 1 END as is_representative, 1 as resourceTypeN, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type =  ctv.custom_table_value_id where content_id = r.content_id and association_type in (201,202,203,204)) as depthOfknowledge, (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type =  ctv.custom_table_value_id where content_id = r.content_id and association_type in (235,211,234)) as momentsofLearning,  (select GROUP_CONCAT(ctv.value SEPARATOR "~~") from content_meta_association cma inner join custom_table_value ctv on cma.association_type =  ctv.custom_table_value_id where content_id = r.content_id and association_type in (217,229,231,223,225,219,222,230,227,218,226,224,228,216,221)) as educationalUse,(select CONCAT(IFNULL(name,"null"),"~~", IFNULL(url,"null"),"~~", IFNULL(code,"null"),"~~", IFNULL(tag,"null"),"~~", IFNULL(icon,"null"),"~~", IFNULL(definition,"null")) from license where name = r.license_name) as licenseString, (select value from custom_table_value where custom_table_value_id = r.resource_format_id) as resourceFormat, (select value from custom_table_value where custom_table_value_id = r.instructional_id) as instructional, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.user_uid and optional_key = "show_profile_page") as ownerString, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.creator_uid and optional_key = "show_profile_page") as creatorString, (select CONCAT(IFNULL(attribution,"null"),"~~",IFNULL(domain_name,"null"),"~~",IFNULL(active_status,"null"),"~~",IFNULL(type,"null")) from resource_source where resource_source_id = r.resource_source_id) as resourceSourceString, c.organization_uid  from resource r inner join content c on c.content_id = r.content_id where  r.type_name in ("animation/kmz", "animation/swf","exam/pdf","handouts","image/png","ppt/pptx","resource/url","textbook/scribd","video/youtube","gooru/notebook") and  c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 5 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['prod_esource_sync_job_test'] ['running_status'] = int(0);
set job_tracker ['prod_esource_sync_job_test'] ['start_time'] = utf8('2014-11-27 14:40:35');
set job_tracker ['prod_esource_sync_job_test'] ['status'] = int(1);
set job_tracker ['1'] ['column_list'] = utf8('gooru_oid,content_id,user_uid,creator_uid,sharing,last_modified,created_on,title,thumbnail,grade,category,views_count,organization_uid,type_name,last_updated_user_uid,url,copied_resource_id,is_oer,record_source,license_name,resource_type,endTime,app_key,app_id,resource_format_id,instructional_id');
set job_tracker ['1'] ['end_time'] = utf8('2014-11-13 07:54:28');
set job_tracker ['1'] ['job_name'] = utf8('dim_resource');
set job_tracker ['1'] ['job_path'] = utf8('dim_resource');
set job_tracker ['1'] ['key_column'] = utf8('app_id');
set job_tracker ['1'] ['max_jobs'] = utf8('2');
set job_tracker ['1'] ['modified_by'] = utf8(' ');
set job_tracker ['1'] ['owner'] = int(1835101801);
set job_tracker ['1'] ['query'] = utf8('SELECT c.gooru_oid, c.content_id, c.user_uid, c.creator_uid, CAST(c.sharing AS CHAR(50)), c.last_modified, c.created_on, r.title, CONCAT("http://repopath/", r.folder, r.thumbnail) as thumbnail, r.grade, r.category, CAST(r.views_total AS SIGNED), c.organization_uid, r.type_name, c.last_updated_user_uid, r.url, r.copied_resource_id, r.is_oer, r.record_source, r.license_name, CASE WHEN r.type_name IN("animation/kmz", "animation/swf","exam/pdf","handouts","image/png","ppt/pptx","resource/url","textbook/scribd","video/youtube","gooru/notebook") THEN 1  ELSE CASE WHEN r.type_name IN("gooru/classplan", "gooru/classbook","scollection") THEN 2  ELSE CASE WHEN r.type_name IN ("assessment-quiz","assessment-exam") THEN 3  ELSE CASE WHEN r.type_name IN ("qb/question","assessment-question","question") THEN 4  ELSE CASE WHEN  r.type_name = "classpage" THEN 5  ELSE CASE WHEN  r.type_name = "assignment" THEN 6  ELSE CASE WHEN  r.type_name = "folder" THEN 7  ELSE CASE WHEN r.type_name in ("gooru/classplan", "gooru/classbook") THEN 8  ELSE CASE WHEN r.type_name ="scollection" THEN 9 ELSE 10 END END END END END END END END  END as resource_type,c.last_modified AS endTime,CONCAT("GLP") as app_key, CONCAT("GLP~", gooru_oid) as app_id, r.resource_format_id, r.instructional_id FROM content c INNER JOIN resource r on r.content_id = c.content_id WHERE c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 30 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['1'] ['server_name'] = utf8('server');
set job_tracker ['1'] ['start_time'] = utf8('2014-09-04 14:04:24');
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['column_list'] = utf8('rkey,count~resourceAddedPublic,count~resourceAddedPrivate,count~resourceAddedSharable,count~resourceAdded,endTime');
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['end_time'] = utf8('2015-07-27 08:44:41');
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['indexed_count'] = long(26110000);
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['job_name'] = utf8('Resource-Copied-Count-Sync-ResourceCF-all');
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['key_column'] = int(1919640953);
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['max_allowed_content'] = long(3618132359950446640);
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['max_count'] = long(50000);
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['modified_on'] = utf8('2015-05-21 11:17:40');
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['monitor_job'] = int(0);
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['owner'] = utf8('user');
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['query'] = utf8('select CAST(concat("all~",c.gooru_oid) AS CHAR(40)) as rkey, SUM(CASE cc.sharing WHEN "public" THEN 1 END) as public_count, SUM(CASE cc.sharing WHEN "private" THEN 1 END) as private_count,SUM(CASE cc.sharing WHEN "anyonewithlink" THEN 1 END) as anyonewithlink_count , count(c.gooru_oid) as added_count, CAST(ci1.last_modified AS CHAR(55)) as endTime from content c inner join collection_item ci on (ci.resource_content_id = c.content_id) inner join (select distinct cr.content_id, max(c.last_modified) as last_modified from content c inner join resource r on (c.content_id = r.content_id) inner join collection_item ci on (r.content_id = ci.collection_content_id) inner join content cr on (ci.resource_content_id = cr.content_id)  where r.type_name = "scollection" and c.content_id BETWEEN :startValue AND :endValue group by cr.content_id) AS ci1 on (ci.resource_content_id = ci1.content_id) inner join content cc on (cc.content_id = ci.collection_content_id) group by c.gooru_oid order by ci1.last_modified ASC');
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['running_status'] = int(0);
set job_tracker ['sync_resource_copied_count_resource_cf_all'] ['status'] = int(0);
set job_tracker ['migrate_classpage'] ['column_list'] = utf8('rkey,classpage_content_id,classpage_gooru_oid,username,user_group_uid,organization_uid,user_group_type,active_flag,user_group_code,gooru_uid,is_group_owner,deleted,endTime');
set job_tracker ['migrate_classpage'] ['end_time'] = utf8('2015-08-06 07:12:52');
set job_tracker ['migrate_classpage'] ['job_interval'] = long(300000);
set job_tracker ['migrate_classpage'] ['job_name'] = utf8('Classpage');
set job_tracker ['migrate_classpage'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_classpage'] ['modified_on'] = utf8('2015-08-06 13:41:33');
set job_tracker ['migrate_classpage'] ['monitor_job'] = int(0);
set job_tracker ['migrate_classpage'] ['owner'] = utf8('user');
set job_tracker ['migrate_classpage'] ['query'] = utf8('SELECT CONCAT(c.gooru_oid,"~",ug.user_group_uid,"~",uga.gooru_uid) AS rkey, cl.classpage_content_id ,c.gooru_oid,u.username AS username, ug.user_group_uid AS user_group_uid, ug.organization_uid AS organization_uid, ug.user_group_type AS user_group_type, CAST(ug.active_flag AS CHAR) AS active_flag, ug.user_group_code AS user_group_code, uga.gooru_uid AS gooru_uid, CAST(uga.is_group_owner AS CHAR) AS is_group_owner, 0 AS deleted, CAST(c.last_modified AS CHAR(100)) AS endTime  FROM classpage AS cl  INNER JOIN content AS c ON (c.content_id = cl.classpage_content_id) LEFT JOIN   user_group AS ug ON (ug.user_group_code =cl.classpage_code)  LEFT JOIN user_group_association AS uga ON (ug.user_group_uid = uga.user_group_uid) LEFT JOIN user AS u ON (u.gooru_uid = uga.gooru_uid) WHERE c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 20 SECOND) AND NOW()  ORDER BY c.last_modified ASC');
set job_tracker ['migrate_classpage'] ['running_status'] = int(0);
set job_tracker ['migrate_classpage'] ['start_time'] = utf8('2014-11-13 01:10:17');
set job_tracker ['migrate_classpage'] ['status'] = int(0);
set job_tracker ['balance_view_count'] ['query'] = utf8('select gooru_oid from content c inner join collection co on (co.content_id = c.content_id) where c.organization_uid = "1d1314bc-f810-4e9c-bde4-98051eca29d9" and co.collection_type = "collection"');
set job_tracker ['balance_view_count'] ['running_status'] = int(0);
set job_tracker ['other-resourcetype-sync-job'] ['column_list'] = utf8('gooruOId,indexType,version,title,description,url,contentId,distinguish,resourceSourceId,thumbnail,folder,resourceType,typeEscaped,category,mediaType,recordSource,sharing,lastModified,createdOn,grade,frameBreaker,statistics.statusIsBroken,assetURI,batchId,lastUpdatedUserUid,isOer,versionUid,clusterUid,isCanonical,resourceTypeN,resourceFormat,instructional,ownerString,creatorString,organization.partyUid');
set job_tracker ['other-resourcetype-sync-job'] ['end_time'] = utf8('2015-08-06 13:38:34');
set job_tracker ['other-resourcetype-sync-job'] ['job_interval'] = long(300000);
set job_tracker ['other-resourcetype-sync-job'] ['job_name'] = utf8('sync-other-resourcetype');
set job_tracker ['other-resourcetype-sync-job'] ['key_column'] = long(7453298445706545508);
set job_tracker ['other-resourcetype-sync-job'] ['modified_on'] = utf8('2015-08-06 13:38:34');
set job_tracker ['other-resourcetype-sync-job'] ['monitor_job'] = int(0);
set job_tracker ['other-resourcetype-sync-job'] ['owner'] = utf8('user');
set job_tracker ['other-resourcetype-sync-job'] ['query'] = utf8('select c.gooru_oid, r.type_name as index_type, c.version, r.title as title, r.description, r.url as url, c.content_id, r.distinguish, r.resource_source_id, r.thumbnail, r.folder, r.type_name, (replace(replace(r.type_name, "-",""),"/","")) as typeEscaped, r.category as category, r.media_type, r.record_source, CAST(c.sharing AS CHAR(30)) as sharing, CAST(c.last_modified AS CHAR(30)) as last_modified, CAST(c.created_on AS CHAR(30)) AS created_on, r.grade as grade, CASE WHEN r.has_frame_breaker = 1 THEN 1 else 0 END AS has_frame_breaker, CASE WHEN r.broken_status = 1 THEN 1 else 0 END AS broken_status, "http://repopath/" as assetURI,r.batch_id, c.last_updated_user_uid, CASE WHEN r.is_oer = 1 THEN 1 ELSE 0 END as is_oer, UUID() as versionUid,r.cluster_uid,  CASE WHEN is_representative = 0 THEN 0 ELSE 1 END as is_representative, CASE WHEN r.type_name IN ("assessment-quiz","assessment-exam") THEN 3  WHEN  r.type_name = "classpage" THEN 5   WHEN  r.type_name = "assignment" THEN 6  WHEN  r.type_name = "folder" THEN 7   WHEN r.type_name in ("gooru/classplan", "gooru/classbook") THEN 8 END as resourceTypeN, (select value from custom_table_value where custom_table_value_id = r.resource_format_id) as resourceFormat, (select value from custom_table_value where custom_table_value_id = r.instructional_id) as instructional, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.user_uid and optional_key = "show_profile_page") as ownerString, (select concat(IFNULL(username,"null"),"~~",IFNULL(firstName,"null"),"~~", IFNULL(lastName,"null"), "~~",IFNULL(gooru_uid,"null"),"~~",IFNULL(p.optional_value,"null")) from user u inner join party_custom_field p on p.party_uid = u.gooru_uid where u.gooru_uid = c.creator_uid and optional_key = "show_profile_page") as creatorString, c.organization_uid from resource r inner join content c on c.content_id = r.content_id where  r.type_name in ("gooru/classplan", "gooru/classbook", "assessment-quiz","assessment-exam","classpage", "assignment", "folder", "pathway","shelf") and  c.last_modified BETWEEN DATE_SUB(:startTime, INTERVAL 70 SECOND) AND NOW() ORDER BY c.last_modified ASC');
set job_tracker ['other-resourcetype-sync-job'] ['running_status'] = int(0);
set job_tracker ['other-resourcetype-sync-job'] ['status'] = int(0);
set job_tracker ['migrate-resource-copied-count'] ['column_list'] = utf8('rkey,count~copy');
set job_tracker ['migrate-resource-copied-count'] ['job_name'] = utf8('Resource-Copied-Count-All');
set job_tracker ['migrate-resource-copied-count'] ['key_column'] = int(1919640953);
set job_tracker ['migrate-resource-copied-count'] ['max_allowed_content'] = long(3617851988914680630);
set job_tracker ['migrate-resource-copied-count'] ['modified_on'] = utf8('2014-12-16 04:19:56');
set job_tracker ['migrate-resource-copied-count'] ['owner'] = utf8('user');
set job_tracker ['migrate-resource-copied-count'] ['query'] = utf8('select concat("all~", c.gooru_oid) as rkey, count(c.gooru_oid) - 1 as copied_count, CAST(last_modified AS CHAR(55)) as endTime from collection_item ci inner join content c on (ci.resource_content_id = c.content_id) inner join resource r on (r.content_id = c.content_id)  where r.type_name not in ("scollection","assessment-exam","gooru/classbook","assessment-quiz","gooru/classbook","gooru/classplan","classpage","assignment","folder") and c.content_id between :startValue and :endValue group by c.content_id');
set job_tracker ['migrate_live_dashboard'] ['column_list'] = utf8('rkey,gooru_oid');
set job_tracker ['migrate_live_dashboard'] ['index_on'] = int(1347571524);
set job_tracker ['migrate_live_dashboard'] ['job_name'] = utf8('Migrate-Live-DashBoard-All');
set job_tracker ['migrate_live_dashboard'] ['key_column'] = int(1919640953);
set job_tracker ['migrate_live_dashboard'] ['max_allowed_content'] = long(3617860793480001847);
set job_tracker ['migrate_live_dashboard'] ['modified_on'] = utf8('2014-12-17 01:19:56');
set job_tracker ['migrate_live_dashboard'] ['owner'] = utf8('user');
set job_tracker ['migrate_live_dashboard'] ['query'] = utf8('SELECT CAST(CONCAT("all~", gooru_oid) AS CHAR(75)) AS rkey, gooru_oid FROM content WHERE content_id BETWEEN :startValue AND :endValue');
