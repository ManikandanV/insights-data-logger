#-------------------------------------------------------------------------------
# cassandra-queries.txt
# insights-event-logger
# Created by Gooru on 2014
# Copyright (c) 2014 Gooru. All rights reserved.
# http://www.goorulearning.org/
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#-------------------------------------------------------------------------------
CREATE KEYSPACE event_logger_insights
with placement_strategy = 'org.apache.cassandra.locator.SimpleStrategy'
and strategy_options = {replication_factor:1};

use event_logger_insights;

CREATE COLUMN FAMILY event_detail
WITH comparator = UTF8Type
AND key_validation_class= UTF8Type
AND column_metadata = [
{column_name: startTime, validation_class: LongType}
{column_name: userAgent, validation_class: UTF8Type}
{column_name: userIp, validation_class: UTF8Type}
{column_name: endTime, validation_class: LongType}
{column_name: fields, validation_class: UTF8Type}
{column_name: eventName, validation_class: UTF8Type}
{column_name: apiKey, validation_class: UTF8Type}
{column_name: sessionToken, validation_class: UTF8Type}
{column_name: contentGooruOid, validation_class: UTF8Type}
{column_name: parentGooruOid, validation_class: UTF8Type}
{column_name: timeSpentInMillis, validation_class: LongType}
{column_name: eventSource, validation_class: UTF8Type}
{column_name: eventValue, validation_class: UTF8Type}
];

CREATE COLUMN FAMILY app_api_key
WITH comparator = UTF8Type
AND key_validation_class=UTF8Type
AND column_metadata = [
{column_name: appName, validation_class: UTF8Type}
{column_name: endPoint, validation_class: UTF8Type}
{column_name: pushIntervalMs, validation_class: UTF8Type}
{column_name: appOid, validation_class: UTF8Type}
];

CREATE COLUMN FAMILY event_timeline
WITH comparator = UTF8Type
AND key_validation_class= UTF8Type
AND column_metadata = [
];

CREATE COLUMN FAMILY session_timeline
WITH comparator = UTF8Type
AND key_validation_class= UTF8Type
AND column_metadata = [
];

CREATE COLUMN FAMILY event_completion
WITH comparator = UTF8Type
AND key_validation_class= UTF8Type
AND column_metadata = [
{column_name: eventName, validation_class: UTF8Type}
{column_name: startTime, validation_class: LongType}
{column_name: endTime, validation_class: LongType}
];

CREATE COLUMN FAMILY dim_events
WITH comparator = UTF8Type
AND key_validation_class= UTF8Type
AND column_metadata = [
{column_name: eventNameId, validation_class: UTF8Type}
{column_name: eventName, validation_class: UTF8Type}
{column_name: displayName, validation_class: UTF8Type}
{column_name: description, validation_class: UTF8Type}
{column_name: displayOrder, validation_class: IntegerType}
];

CREATE COLUMN FAMILY stging_event_resource_user
WITH comparator = UTF8Type
AND key_validation_class= UTF8Type
AND column_metadata = [
{column_name: timeCodeMi, validation_class: LongType}
{column_name: eventDetail, validation_class: UTF8Type}
{column_name: apiKey, validation_class: UTF8Type}
{column_name: startTime, validation_class: LongType}
{column_name: endTime, validation_class: LongType}
{column_name: eventName, validation_class: UTF8Type}
{column_name: userAgent, validation_class: UTF8Type}
{column_name: userIp, validation_class: UTF8Type}
{column_name: userUid, validation_class: UTF8Type}
{column_name: gooruOid, validation_class: UTF8Type}
{column_name: resourceType, validation_class: IntegerType}
{column_name: timeSpentInMillis, validation_class: LongType}
{column_name: parentGooruOid, validation_class: UTF8Type}
{column_name: organizationUid, validation_class: UTF8Type}
{column_name: eventValue, validation_class: UTF8Type}
{column_name: hourTimeCode, validation_class: LongType}
];

CREATE TABLE job_status (
  KEY text PRIMARY KEY,
  job_status text
) WITH
  comment='' AND
  comparator=text AND
  read_repair_chance=0.100000 AND
  gc_grace_seconds=864000 AND
  default_validation=blob AND
  min_compaction_threshold=4 AND
  max_compaction_threshold=32 AND
  replicate_on_write='true' AND
  compaction_strategy_class='SizeTieredCompactionStrategy' AND
  compression_parameters:sstable_compression='SnappyCompressor';

create column family view_count with default_validation_class=CounterColumnType and comparator=UTF8Type;

create column family real_time_counters with default_validation_class=CounterColumnType and comparator=UTF8Type;

  
  CREATE TABLE recent_viewed_resources (
  KEY text PRIMARY KEY
) WITH
  comment='' AND
  comparator=text AND
  read_repair_chance=0.100000 AND
  gc_grace_seconds=864000 AND
  default_validation=blob AND
  min_compaction_threshold=4 AND
  max_compaction_threshold=32 AND
  replicate_on_write='true' AND
  compaction_strategy_class='SizeTieredCompactionStrategy' AND
  compression_parameters:sstable_compression='SnappyCompressor';
  
  
ALTER TABLE job_status ADD constant_value text;

ALTER TABLE job_status ADD jobs_count bigint;

ALTER TABLE stging_event_resource_user ADD open_ended_text text;

ALTER TABLE agg_event_resource_user_hour ADD open_ended_text text;

ALTER TABLE activity_stream ADD user_uid text;
ALTER TABLE activity_stream ADD organization_uid text;
ALTER TABLE activity_stream ADD api_key text;